
#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура КаталогВыгрузкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыборКаталогаЗавершение", ЭтотОбъект);
	ДиалогВыбораФайла.Показать(ОписаниеОповещения);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Выгрузить(Команда)
	
	#Если Не ВебКлиент Тогда
		ТекстJSON = ВыгрузитьНаСервере();
		ПолноеИмяФайла = ПолноеИмяФайла();
		ЗаписьТекста = Новый ЗаписьТекста(ПолноеИмяФайла);
		ЗаписьТекста.Записать(ТекстJSON);
		ЗаписьТекста.Закрыть();
	#КонецЕсли
	 
КонецПроцедуры

&НаКлиенте
Процедура Загрузить(Команда)
	
	#Если Не ВебКлиент Тогда
		ПолноеИмяФайла = ПолноеИмяФайла();
		ЧтениеТекста = Новый ЧтениеТекста(ПолноеИмяФайла);
		ТекстJSON = ЧтениеТекста.Прочитать();
		ЧтениеТекста.Закрыть();
		СписокОшибок = Новый Массив;
		ДокументРезультат = ЗагрузитьНаСервере(Организация, ТекстJSON, СписокОшибок);
//		Для Каждого Ошибка Из СписокОшибок Цикл
//			ОбщегоНазначенияКлиент.СообщитьПользователю(Ошибка);	
//		КонецЦикла;
		ОбщегоНазначенияКлиент.СообщитьПользователю(ДокументРезультат);
	#КонецЕсли
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция ПолноеИмяФайла()
	Возврат Объект.КаталогВыгрузки + "/выгрузка.json";
КонецФункции

&НаКлиенте
Процедура ВыборКаталогаЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если Не ЗначениеЗаполнено(ВыбранныеФайлы) Тогда
		Возврат;
	КонецЕсли;
	
	Объект.КаталогВыгрузки = ВыбранныеФайлы[0];
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВыгрузитьНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Период", НачалоГода(ТекущаяДатаСеанса()) - 1);
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ДанныеОНачисленияхДляРасчетаСреднегоЗаработкаОбщий.Сотрудник,
		|	ДанныеОНачисленияхДляРасчетаСреднегоЗаработкаОбщий.ПорядокРасчета,
		|	ДанныеОНачисленияхДляРасчетаСреднегоЗаработкаОбщий.СоставнаяЧасть,
		|	ДанныеОНачисленияхДляРасчетаСреднегоЗаработкаОбщий.СтатьяФинансирования,
		|	ДанныеОНачисленияхДляРасчетаСреднегоЗаработкаОбщий.СпособОтраженияЗарплатыВБухучете,
		|	ДанныеОНачисленияхДляРасчетаСреднегоЗаработкаОбщий.СтатьяРасходов,
		|	ДанныеОНачисленияхДляРасчетаСреднегоЗаработкаОбщий.ОблагаетсяЕНВД,
		|	ДанныеОНачисленияхДляРасчетаСреднегоЗаработкаОбщий.Индексируется,
		|	ДанныеОНачисленияхДляРасчетаСреднегоЗаработкаОбщий.Год,
		|	ДанныеОНачисленияхДляРасчетаСреднегоЗаработкаОбщий.ДатаНачалаБазовогоПериода,
		|	ДанныеОНачисленияхДляРасчетаСреднегоЗаработкаОбщий.КоличествоМесяцев,
		|	ДанныеОНачисленияхДляРасчетаСреднегоЗаработкаОбщий.Организация,
		|	ДанныеОНачисленияхДляРасчетаСреднегоЗаработкаОбщий.ФизическоеЛицо,
		|	ДанныеОНачисленияхДляРасчетаСреднегоЗаработкаОбщий.ИсходныйДокумент,
		|	ДанныеОНачисленияхДляРасчетаСреднегоЗаработкаОбщий.ПоказательПремирования,
		|	ДанныеОНачисленияхДляРасчетаСреднегоЗаработкаОбщий.Сумма,
		|	ДанныеОНачисленияхДляРасчетаСреднегоЗаработкаОбщий.Сторно,
		|	ДанныеОНачисленияхДляРасчетаСреднегоЗаработкаОбщий.Период
		|ИЗ
		|	РегистрНакопления.ДанныеОНачисленияхДляРасчетаСреднегоЗаработкаОбщий КАК
		|		ДанныеОНачисленияхДляРасчетаСреднегоЗаработкаОбщий
		|ГДЕ
		|	ДанныеОНачисленияхДляРасчетаСреднегоЗаработкаОбщий.Период < &Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеОНачисленияхДляРасчетаСреднегоЗаработкаФСС.ФизическоеЛицо,
		|	ДанныеОНачисленияхДляРасчетаСреднегоЗаработкаФСС.ГоловнаяОрганизация,
		|	ДанныеОНачисленияхДляРасчетаСреднегоЗаработкаФСС.Сотрудник,
		|	ДанныеОНачисленияхДляРасчетаСреднегоЗаработкаФСС.ПорядокРасчета,
		|	ДанныеОНачисленияхДляРасчетаСреднегоЗаработкаФСС.СтатьяФинансирования,
		|	ДанныеОНачисленияхДляРасчетаСреднегоЗаработкаФСС.СпособОтраженияЗарплатыВБухучете,
		|	ДанныеОНачисленияхДляРасчетаСреднегоЗаработкаФСС.СтатьяРасходов,
		|	ДанныеОНачисленияхДляРасчетаСреднегоЗаработкаФСС.ОблагаетсяЕНВД,
		|	ДанныеОНачисленияхДляРасчетаСреднегоЗаработкаФСС.СпособУчета,
		|	ДанныеОНачисленияхДляРасчетаСреднегоЗаработкаФСС.Сумма,
		|	ДанныеОНачисленияхДляРасчетаСреднегоЗаработкаФСС.Период
		|ИЗ
		|	РегистрНакопления.ДанныеОНачисленияхДляРасчетаСреднегоЗаработкаФСС КАК
		|		ДанныеОНачисленияхДляРасчетаСреднегоЗаработкаФСС
		|ГДЕ
		|	ДанныеОНачисленияхДляРасчетаСреднегоЗаработкаФСС.Период < &Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеСтрахователейДляРасчетаСреднегоЗаработкаФСС.Период,
		|	ДанныеСтрахователейДляРасчетаСреднегоЗаработкаФСС.ФизическоеЛицо,
		|	ДанныеСтрахователейДляРасчетаСреднегоЗаработкаФСС.ГоловнаяОрганизация,
		|	ДанныеСтрахователейДляРасчетаСреднегоЗаработкаФСС.Год,
		|	ДанныеСтрахователейДляРасчетаСреднегоЗаработкаФСС.Страхователь,
		|	ДанныеСтрахователейДляРасчетаСреднегоЗаработкаФСС.Сумма,
		|	ДанныеСтрахователейДляРасчетаСреднегоЗаработкаФСС.ДнейБолезниУходаЗаДетьми,
		|	ДанныеСтрахователейДляРасчетаСреднегоЗаработкаФСС.НачалоПериода,
		|	ДанныеСтрахователейДляРасчетаСреднегоЗаработкаФСС.ОкончаниеПериода,
		|	ДанныеСтрахователейДляРасчетаСреднегоЗаработкаФСС.Сторно
		|ИЗ
		|	РегистрНакопления.ДанныеСтрахователейДляРасчетаСреднегоЗаработкаФСС КАК
		|		ДанныеСтрахователейДляРасчетаСреднегоЗаработкаФСС
		|ГДЕ
		|	ДанныеСтрахователейДляРасчетаСреднегоЗаработкаФСС.Период < &Период";
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();


	Результат = Новый Структура;

	ИмяРегистра = "ДанныеОНачисленияхДляРасчетаСреднегоЗаработкаОбщий";
	РезультатЗапроса = РезультатыЗапроса[0];
	РезультатВыборки = РезультатВыборки(РезультатЗапроса);
	Результат.Вставить(ИмяРегистра, РезультатВыборки);
	
	ИмяРегистра = "ДанныеОНачисленияхДляРасчетаСреднегоЗаработкаФСС";
	РезультатЗапроса = РезультатыЗапроса[1];
	РезультатВыборки = РезультатВыборки(РезультатЗапроса);
	Результат.Вставить(ИмяРегистра, РезультатВыборки);

	ИмяРегистра = "ДанныеСтрахователейДляРасчетаСреднегоЗаработкаФСС";
	РезультатЗапроса = РезультатыЗапроса[2];
	РезультатВыборки = РезультатВыборки(РезультатЗапроса);
	Результат.Вставить(ИмяРегистра, РезультатВыборки);

	ЗаписьJSON = Новый ЗаписьJSON; 
	ЗаписьJSON.УстановитьСтроку();
	ЗаписатьJSON(ЗаписьJSON, Результат);
	РезультатJSON = ЗаписьJSON.Закрыть(); 
	
	Возврат РезультатJSON;
	
КонецФункции

&НаСервереБезКонтекста
Функция РезультатВыборки(РезультатЗапроса)
	
	Колонки = РезультатЗапроса.Колонки;
	
	СписокРезультатов = Новый Массив;

	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		Результат = Новый Структура;
		Для Каждого Колонка Из Колонки Цикл
			Значение = XMLСтрока(Выборка[Колонка.Имя]);
			Результат.Вставить(Колонка.Имя, Значение);
		КонецЦикла;
		СписокРезультатов.Добавить(Результат);
	КонецЦикла; 
	
	Возврат СписокРезультатов;
	
КонецФункции

&НаСервереБезКонтекста
Функция ЗагрузитьНаСервере(Знач Организация, Знач ТекстJSON, СписокОшибок)
	
	КонецПрошлогоГода = НачалоГода(ТекущаяДатаСеанса()) - 1;
	
	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(ТекстJSON);
	РезультатДесериализации = ПрочитатьJSON(ЧтениеJSON, Истина);
	ЧтениеJSON.Закрыть();
	
	ПереносДанныхОбъект = Документы.ПереносДанных.СоздатьДокумент();
	ПереносДанныхОбъект.ДатаПервичногоДокумента = КонецПрошлогоГода;
	ПереносДанныхОбъект.Дата = КонецПрошлогоГода;
	ПереносДанныхОбъект.Организация = Организация;
	
	Для Каждого НаборДвижений Из РезультатДесериализации Цикл
		ИмяРегистра = НаборДвижений.Ключ;
		СтрокаТаблицаРегистров = ПереносДанныхОбъект.ТаблицаРегистров.Добавить();
		СтрокаТаблицаРегистров.Имя = ИмяРегистра; 
		СписокДвижений = НаборДвижений.Значение;
		ДвиженияРН = ПереносДанныхОбъект.Движения[ИмяРегистра];
		ДвиженияРН.Записывать = Истина;
		МетаданныеРН = Метаданные.РегистрыНакопления[ИмяРегистра];
		Для Каждого Движение Из СписокДвижений Цикл
			СтрокаДвижения = ДвиженияРН.Добавить();
			
			ЗначениеJSON = Движение["Период"];
			СтрокаДвижения.Период = XMLЗначение(Тип("Дата"), ЗначениеJSON);
			
			Для Каждого Измерение Из МетаданныеРН.Измерения Цикл
				Имя = Измерение.Имя;
				ЗначениеJSON = Движение[Имя];
				Значение = ЗначениеДесериализованное(Измерение, ЗначениеJSON, СписокОшибок);
				СтрокаДвижения[Имя] = Значение;
			КонецЦикла;
			Для Каждого Измерение Из МетаданныеРН.Ресурсы Цикл
				Имя = Измерение.Имя;
				ЗначениеJSON = Движение[Имя];
				Значение = ЗначениеДесериализованное(Измерение, ЗначениеJSON, СписокОшибок);
				СтрокаДвижения[Имя] = Значение;
			КонецЦикла;
			Для Каждого Измерение Из МетаданныеРН.Реквизиты Цикл
				Имя = Измерение.Имя;
				ЗначениеJSON = Движение[Имя];
				Значение = ЗначениеДесериализованное(Измерение, ЗначениеJSON, СписокОшибок);
				СтрокаДвижения[Имя] = Значение;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	ПереносДанныхОбъект.Записать();
	
	Возврат ПолучитьНавигационнуюСсылку(ПереносДанныхОбъект.Ссылка);
	
КонецФункции

&НаСервереБезКонтекста
Функция ЗначениеДесериализованное(Реквизит, ЗначениеJSON, СписокОшибок)
	Перем Значение;
	
	Если ЗначениеЗаполнено(ЗначениеJSON) Тогда
		ОписаниеТипов = Реквизит.Тип;
		ОсновнойТип = ОписаниеТипов.Типы()[0];
		Если ОбщегоНазначения.ЭтоСсылка(ОсновнойТип) Тогда
			ПолноеИмя = Метаданные.НайтиПоТипу(ОсновнойТип).ПолноеИмя();
			Менеджер = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(ПолноеИмя);
			Если Перечисления.ТипВсеСсылки().СодержитТип(ОсновнойТип) Тогда
				Значение = Менеджер[ЗначениеJSON];
			Иначе
				УникальныйИдентификатор = Новый УникальныйИдентификатор(ЗначениеJSON);
				Если ЗначениеЗаполнено(УникальныйИдентификатор) Тогда
					Значение = Менеджер.ПолучитьСсылку(УникальныйИдентификатор);
					Если Значение.ПолучитьОбъект() = Неопределено Тогда
						СписокОшибок.Добавить(СтрШаблон("Не найден объект типа %1 с УИД %2", ОсновнойТип, ЗначениеJSON));
						Значение = Неопределено;
					КонецЕсли;							
				КонецЕсли;
			КонецЕсли;
		Иначе
			Значение = XMLЗначение(ОсновнойТип, ЗначениеJSON); //ОписаниеТипов.ПривестиЗначение(ЗначениеJSON);
		КонецЕсли;
	КонецЕсли;
	
	Возврат Значение;
КонецФункции

#КонецОбласти