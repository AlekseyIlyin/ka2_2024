
&НаКлиенте
Процедура КомандаКомандаСоздатьСкрипт(Команда)
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	НомПоз		= СтрНайти(ИдентификаторКоманды, "_АвтоРежим");
	manfid		= Сред(ИдентификаторКоманды, НомПоз + СтрДлина("_АвтоРежим"));
	
	ЭтоКлиент	= Булево(СтрНайти(manfid, "_Клиент"));
	
	manfid		= СтрЗаменить(manfid, "_Клиент", "");
	manfid		= СтрЗаменить(manfid, "_", "");
	manfid		= ?(ПустаяСтрока(manfid), 0, Число(manfid));
	
	ПроизводительОписание = ЭтаФорма.Переменные.ВсеПроизводители[manfid];
	manf = ?(ПроизводительОписание = Неопределено, "По всем производителям", ПроизводительОписание.Наименование);
	
	CISLinkUnloader_vbs = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		"CISLinkUnloader%1%2.vbs"
		,?(ЭтоКлиент, "_Клиент", "")
		, ?(ПроизводительОписание = Неопределено, "", " (" + ПроизводительОписание.Наименование + ")")
	);
	
	manf = ?(ПроизводительОписание = Неопределено, "По всем производителям", ПроизводительОписание.Наименование);
	
	ДВФ = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	
	ДВФ.Заголовок		= "Выберите, куда сохранить скрипт для планировщика";
	ДВФ.Фильтр			= "Скрипт выгрузки|" + CISLinkUnloader_vbs + "|Скрипты|*.vbs|";
	ДВФ.ПолноеИмяФайла	= CISLinkUnloader_vbs;
	
	Если Не ДВФ.Выбрать() Тогда
		Возврат;
	КонецЕсли;
	
	СтрокаСоединения = СтрЗаменить(СтрокаСоединенияИнформационнойБазы(), """", """""");
	ЗаписьТекста = Новый ЗаписьТекста(ДВФ.ПолноеИмяФайла, КодировкаТекста.ANSI,,Ложь);
	
	Если Не ЭтоКлиент Тогда
	
		ЗаписьТекста.Записать(
			"'Если не создается V83.COMConnector выполните команду regsvr32 comcntr.dll от имени администратора
			|'Возможно, потребуется настройка службы компонентов по инструкции
			|' https://ikhodin.com/%D0%BE%D1%88%D0%B8%D0%B1%D0%BA%D0%B0-v83-comconnector-%D0%BD%D0%B0-%D1%81%D0%B5%D1%80%D0%B2%D0%B5%D1%80%D0%B5-64-%D1%80%D0%B5%D1%88%D0%B5%D0%BD%D0%B8%D0%B5-%D0%BF%D1%80%D0%BE%D0%B1%D0%BB%D0%B5%D0%BC/
			|' или искать в яндексе статьи v83.comconnector не работает connect
			|
			|set v1C_Connector	= CreateObject(""V83.COMConnector"")
			|set v1C_Connect	= v1C_Connector.Connect(""" + СтрокаСоединения
				+ ?(Не ЗначениеЗаполнено(Пользователь), ""
				, "usr=""""" + СокрЛП(Пользователь) + """"";"
				+ ?(Не ЗначениеЗаполнено(Пароль), ""
				, "pwd=""""" + СокрЛП(Пароль) + """"";"
				))
				+ """)
			|
			|QueryText = _
			|	""ВЫБРАТЬ"" + _
			|	""  ДополнительныеОтчетыИОбработки.Ссылка КАК ВнешняяОбработкаСсылка"" + _
			|	"" ИЗ"" + _
			|	""  Справочник.ДополнительныеОтчетыИОбработки КАК ДополнительныеОтчетыИОбработки"" + _
			|	"" ГДЕ"" + _
			|	""   ДополнительныеОтчетыИОбработки.Вид = ЗНАЧЕНИЕ(Перечисление.ВидыДополнительныхОтчетовИОбработок.ДополнительнаяОбработка)"" + _
			|	"" И ДополнительныеОтчетыИОбработки.Информация ПОДОБНО """"" + Информация + "%""""""
			|
			|set Query = v1C_Connect.NewObject(""Запрос"", QueryText)
			|
			|set ref1C = Query.[Выполнить]().[Выгрузить](v1C_Connect.[ОбходРезультатаЗапроса].[Прямой]).[Получить](0).[ВнешняяОбработкаСсылка]
			|
			|set obj1C = v1C_Connect.[ДополнительныеОтчетыИОбработки].[ОбъектВнешнейОбработки](ref1C)
			|
			|obj1C.[ВыполнитьКоманду] """ + ИдентификаторКоманды + """, """"
			|
			|v1C_Connector	= 0
			|v1C_Connect	= 0
			|Query			= 0
			|ref1C			= 0
			|obj1C			= 0
			|
			|" + ?(ТихийРежим, "'", "") + "MsgBox(""Выгрузка в """"" + manf + """"" завершена"")
			|"
		);
		
	Иначе
		
		ЗаписьТекста.Записать(
			"'Если не создается v83.Application выполните команду 1cv8c.exe /RegServer от имени администратора
			|
			|set v1C_Connect	= CreateObject(""v83.Application"")
			|isConnected		= v1C_Connect.Connect(""" + СтрокаСоединения
				+ ?(Не ЗначениеЗаполнено(Пользователь), ""
				, "usr=""""" + СокрЛП(Пользователь) + """"";pwd=""""" + СокрЛП(Пароль) + """"";"
				)
				+ """)
			|v1C_Connect.[Сислинк_Автообмен_Клиент].[Автообмен] """ + manf + """, """ + Информация + """, """ + ИдентификаторКоманды + """
			|
			|v1C_Connect.[ЗавершитьРаботуСистемы] false, false, """"
			|
			|v1C_Connect = 0
			|isConnected = 0
			|
			|" + ?(ТихийРежим, "'", "") + "MsgBox(""Выгрузка в """"" + manf + """"" завершена"")
			|"
		);
		
	КонецЕсли;

	ЭтаФорма.Закрыть();
КонецПроцедуры // КомандаКомандаСоздатьСкрипт()

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Перем ОбработкаОбъект, СведенияОВнешнейОбработке;
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	СведенияОВнешнейОбработке = ОбработкаОбъект.СведенияОВнешнейОбработке();
	
	НомПоз = Найти(СведенияОВнешнейОбработке.Информация, Символы.ПС);
	
	ЭтаФорма.Информация = СокрЛП(?(Не НомПоз, СведенияОВнешнейОбработке.Информация, Лев(СведенияОВнешнейОбработке.Информация, НомПоз)));
	
	ЭтаФорма.Переменные = Новый Структура;
	ЭтаФорма.Переменные.Вставить("ВсеПроизводители", ОбработкаОбъект.ВсеПроизводители(Истина));
	
	СписокВыбора = Элементы.ИдентификаторКоманды.СписокВыбора;
	
	Для каждого КомандаОписание Из СведенияОВнешнейОбработке.Команды Цикл
		
		Если СтрНайти(КомандаОписание.Идентификатор, "_АвтоРежим") Тогда
		
			СписокВыбора.Добавить(КомандаОписание.Идентификатор, КомандаОписание.Представление);
		
		КонецЕсли;
		
	КонецЦикла;
	
	ТекущийПользовательСсылка = Пользователи.ТекущийПользователь();
	
	Выборка = Справочники.Пользователи.Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Не ЗначениеЗаполнено(Выборка.ИдентификаторПользователяИБ) Тогда
		
			Продолжить;
		
		КонецЕсли;
		
		ПользовательИБ = ПользователиИнформационнойБазы.НайтиПоУникальномуИдентификатору(Выборка.ИдентификаторПользователяИБ);
		
		Если ПользовательИБ = Неопределено Тогда
		
			Продолжить;
		
		КонецЕсли;
		
		Элементы.Пользователь.СписокВыбора.Добавить(
			ПользовательИБ.Имя
			, ?(Не ПустаяСтрока(ПользовательИБ.ПолноеИмя), ПользовательИБ.ПолноеИмя, ПользовательИБ.Имя) + ?(Выборка.Ссылка = ТекущийПользовательСсылка, " *", "")
			, Истина
			, БиблиотекаКартинок.Пользователь
		);
		
		Если Выборка.Ссылка = ТекущийПользовательСсылка Тогда
		
			ТекущийПользователь = СокрЛП(ПользовательИБ.Имя);
		
		КонецЕсли;
	КонецЦикла;
	
	Элементы.Пользователь.СписокВыбора.СортироватьПоПредставлению(НаправлениеСортировки.Возр);
	
КонецПроцедуры // ПриСозданииНаСервере()

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если Не ЗначениеЗаполнено(Пользователь) Тогда
		Пользователь = ТекущийПользователь;
	КонецЕсли;
	
	СписокВыбора = Элементы.ИдентификаторКоманды.СписокВыбора;
	Если СписокВыбора.НайтиПоЗначению(ИдентификаторКоманды) = Неопределено Тогда
	
		ИдентификаторКоманды = СписокВыбора[0].Значение;
	
	КонецЕсли;
КонецПроцедуры // ПриОткрытии()