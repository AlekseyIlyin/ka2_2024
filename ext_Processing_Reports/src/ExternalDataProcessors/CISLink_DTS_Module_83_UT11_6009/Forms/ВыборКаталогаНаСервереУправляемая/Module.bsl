#Область НеРежимРаботыВОблаке

&НаСервере
Функция ЭтоЛинукс()
	СисИнфо = Новый СистемнаяИнформация;
	Если СисИнфо.ТипПлатформы = ТипПлатформы.Linux_x86
		или СисИнфо.ТипПлатформы = ТипПлатформы.Linux_x86_64
	Тогда
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
КонецФункции // ЭтоЛинукс()

&НаСервере
Функция ПутьПреобразовать(Знач Путь)
	Если ЭтоЛинукс() Тогда
		Возврат СтрЗаменить(Путь, "\", "/");
	КонецЕсли;
	
	Возврат СтрЗаменить(Путь, "/", "\");
КонецФункции // ПутьПреобразовать()

&НаСервере
Процедура ДеревоПапок_Диск_Добавить(Знач ДискОписаниеСтруктура)
	Перем Метка;
	
	ДеревоПапокЭлементы = ДеревоПапок.ПолучитьЭлементы();
	Для каждого ДеревоПапокУр1 Из ДеревоПапокЭлементы Цикл
		Если ВРег(ДеревоПапокУр1.Имя) = (ДискОписаниеСтруктура.Имя) Тогда
			Возврат;
		КонецЕсли;
	КонецЦикла;
	
	ДискОписаниеСтруктура.Свойство("Метка", Метка);
	
	ДеревоПапокУр1					= ДеревоПапокЭлементы.Добавить();
	ДеревоПапокУр1.Имя				= ДискОписаниеСтруктура.Имя;
	ДеревоПапокУр1.Представление	= Лев(ДискОписаниеСтруктура.Имя, 1) + ?(Не ЗначениеЗаполнено(Метка), "",  " (" + Метка+ ")");
	
	ДеревоПапокУр1.ПолучитьЭлементы().Добавить();//Пустой элемент для скана в момент открытия узла
	
	Диск = ВРег(ДискОписаниеСтруктура.Имя);
	Элементы.Диск.СписокВыбора.Добавить(
			ДискОписаниеСтруктура.Имя
		,	Диск
		,,	БиблиотекаКартинок.Папка
	);
	
КонецПроцедуры // ДеревоПапок_Диск_Добавить()

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СтрокаСоединенияИБ = СтрокаСоединенияИнформационнойБазы();
	Если СтрНачинаетсяС(НРег(СтрокаСоединенияИБ), "file=") Тогда
		ЭтаФорма.Заголовок = "Выберите путь на локальном компьютере";
	ИначеЕсли СтрНачинаетсяС(НРег(СтрокаСоединенияИБ), "srvr=") Тогда
		ПозицияТочкиСЗапятой = Найти(СтрокаСоединенияИБ, ";");
		НачальнаяПозицияКопирования = 6 + 1;
		КонечнаяПозицияКопирования = ПозицияТочкиСЗапятой - 2; 
		ИмяСервера = Сред(СтрокаСоединенияИБ, НачальнаяПозицияКопирования, КонечнаяПозицияКопирования - НачальнаяПозицияКопирования + 1);
		
		ЭтаФорма.Заголовок = "Выберите путь на сервере " + ИмяСервера;
	Иначе
		ЭтаФорма.Заголовок = "Выберите путь";
	КонецЕсли;
	
	Каталог = Параметры.Каталог;
	
	ДискСписокВыбора = Элементы.Диск.СписокВыбора;
	ДискСписокВыбора.Очистить();
	
	СписокДисков	= Новый СписокЗначений;
	Если Не ЭтоЛинукс() Тогда
		Попытка
			WMI			= Новый COMОбъект("WbemScripting.SwbemLocator");
			ServicesSet	= WMI.ConnectServer(, "root\cimv2");
			//ПолучитьCOMОбъект("COMServices.COM");
			//ServicesSet		= ПолучитьCOMОбъект("winmgmts:{impersonationLevel=impersonate}!\\.\root\cimv2");
		    СписокДисков	= ServicesSet.ExecQuery("Select Name,VolumeName,VolumeSerialNumber from Win32_LogicalDisk WHERE VolumeSerialNumber like '%'");//WHERE VolumeSerialNumber like '"+МеткаДиска+"'
		Исключение
			Сообщить(ОписаниеОшибки());
		КонецПопытки;
		
	КонецЕсли;
	
	Для Каждого ДискОписание Из СписокДисков Цикл
		ДискОписаниеСтруктура = Новый Структура(
				"Имя,Метка"
			,	ДискПуть(ДискОписание.Name)
			,	ДискОписание.VolumeName
		);
		
		ДеревоПапок_Диск_Добавить(ДискОписаниеСтруктура);
		
    КонецЦикла;
КонецПроцедуры // ПриСозданииНаСервере()

&НаСервереБезКонтекста
Функция МассивПапокПолучить(Знач Путь)
	МассивПапок = Новый Массив;
	Для каждого Папка Из НайтиФайлы(Путь, "*", Ложь) Цикл
		Если Папка.ЭтоКаталог() Тогда
			МассивПапок.Добавить(Папка.Имя);
		КонецЕсли;
	КонецЦикла;
	
	Возврат МассивПапок;
КонецФункции // МассивПапокПолучить()

&НаКлиенте
Процедура ДеревоПапокПередРазворачиванием(Элемент, Строка, Отказ)
	ТекущиеДанные		= ДеревоПапок.НайтиПоИдентификатору(Строка);
	ДочерныеЭлементы	= ТекущиеДанные.ПолучитьЭлементы();
	Если ДочерныеЭлементы.Количество() = 1 Тогда
		ПервыйДочерний = ДочерныеЭлементы[0];
		Если Не ЗначениеЗаполнено(ПервыйДочерний.Имя) Тогда
			ДочерныеЭлементы.Удалить(0);
			Для каждого Папка Из МассивПапокПолучить(ТекущиеДанные.Имя) Цикл
				ДочернийЭлемент = ДочерныеЭлементы.Добавить();
				ДочернийЭлемент.Имя				= ТекущиеДанные.Имя + Папка + "\";
				ДочернийЭлемент.Представление	= Папка;
			    ДочернийЭлемент.ПолучитьЭлементы().Добавить();
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры // ДеревоПапокПередРазворачиванием()

&НаКлиенте
Процедура ДеревоПапокПриАктивизацииСтроки(Элемент)
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Каталог = ТекущиеДанные.Имя;
КонецПроцедуры // ДеревоПапокПриАктивизацииСтроки()

&НаКлиенте
Процедура КомандаВыбрать(Команда)
	ЭтаФорма.Закрыть(Каталог);
КонецПроцедуры // КомандаВыбрать()

&НаКлиенте
Процедура КаталогОчистка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры // КаталогОчистка()

&НаКлиенте
Процедура КаталогОткрытие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры // КаталогОткрытие()

&НаСервере
Функция ДискПуть(Знач Диск)
	//ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	
	Диск = СокрЛП(Диск);
	Если Не ЭтоЛинукс() Тогда
		Если Прав(Диск, 1) = ":" Тогда
			Диск = Диск + "\";
		ИначеЕсли Прав(Диск, 2) <> ":\" Тогда
			Диск = Диск + ":\";
		КонецЕсли;
		
	КонецЕсли;
	
	Файл = Новый Файл(ПутьПреобразовать(Диск));
	Если Не Файл.Существует() Тогда
		Возврат "";
	КонецЕсли;
	
	Возврат ВРег(Файл.ПолноеИмя);
КонецФункции // ДискПуть()

&НаКлиенте
Процедура ДискПриИзменении(Элемент)
	Если Не ЗначениеЗаполнено(Диск) Тогда
		Возврат;
	КонецЕсли;
	
	Диск = ДискПуть(Диск);
	
	Если Не ЗначениеЗаполнено(Диск) Тогда
		Возврат;
	КонецЕсли;
	
	ДеревоПапок_Диск_Добавить(Новый Структура("Имя", Диск));
КонецПроцедуры // ВсеДискиПриИзменении()

#КонецОбласти