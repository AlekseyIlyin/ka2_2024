
&НаКлиенте
Процедура КомандаУстановитьФлажки(Команда)
	
	Для каждого ТаблицаПересчетаСтрока Из ТаблицаПересчета Цикл
	
		ТаблицаПересчетаСтрока.Используется = Истина;
	
	КонецЦикла;
	
КонецПроцедуры // КомандаУстановитьФлажки()

&НаКлиенте
Процедура КомандаСнятьФлажки(Команда)
	
	Для каждого ТаблицаПересчетаСтрока Из ТаблицаПересчета Цикл
	
		ТаблицаПересчетаСтрока.Используется = Ложь;
	
	КонецЦикла;
	
КонецПроцедуры // КомандаСнятьФлажки()

&НаКлиенте
Процедура КомандаПодбор(Команда)
	Перем ТекущиеДанные;
	
	ТекущиеДанные = Элементы.ТаблицаПересчета.ТекущиеДанные;
	
	ПараметрыПодбора = Новый Структура;
	ПараметрыПодбора.Вставить("РежимВыбора"				, Истина);
	ПараметрыПодбора.Вставить("МножественныйВыбор"		, Истина);
	ПараметрыПодбора.Вставить("ВыборГруппИЭлементов "	, ИспользованиеГруппИЭлементов.ГруппыИЭлементы);
	
	Если ТекущиеДанные <> Неопределено Тогда
	
		ПараметрыПодбора.Вставить("ТекущаяСтрока"	, ТекущиеДанные.Номенклатура);
	
	КонецЕсли;
	
	ОткрытьФорму("Справочник.Номенклатура.ФормаВыбора"
		, ПараметрыПодбора
		,,,,
		, Новый ОписаниеОповещения("ПодборЗавершение", ЭтаФорма)
	);
	
КонецПроцедуры // КомандаПодбор()

&НаКлиенте
Процедура ПодборЗавершение(Знач Результат, Знач ДополнительныеПараметры) Экспорт

	Если Результат = Неопределено Тогда
	
		Возврат;
	
	КонецЕсли;
	
	Для х = -Результат.ВГраница() По 0 Цикл
	
		Если ТаблицаПересчета.НайтиСтроки(Новый Структура("Номенклатура", Результат[-х])).Количество() Тогда
		
			Результат.Удалить(-х);
		
		КонецЕсли;
	
	КонецЦикла;
	
	Если Результат.Количество() Тогда
	
		ПодборЗавершениеНаСервере(Результат);
	
	КонецЕсли;

КонецПроцедуры // ПодборЗавершение()

&НаСервере
Процедура ПодборЗавершениеНаСервере(Знач НоменклатураМассив)

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Номенклатура"	, НоменклатураМассив);
	Запрос.УстановитьПараметр("ТаблицаПересчета", ТаблицаПересчета.Выгрузить(, "Номенклатура"));

	Запрос.Текст =
		"ВЫБРАТЬ
		|	ТаблицаПересчета.Номенклатура КАК Номенклатура
		|ПОМЕСТИТЬ ТаблицаПересчета
		|ИЗ
		|	&ТаблицаПересчета КАК ТаблицаПересчета
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ИСТИНА КАК Используется,
		|	СпрНоменклатура.Ссылка КАК Номенклатура
		|ИЗ
		|	Справочник.Номенклатура КАК СпрНоменклатура
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаПересчета КАК ТаблицаПересчета
		|		ПО СпрНоменклатура.Ссылка = ТаблицаПересчета.Номенклатура
		|ГДЕ
		|	СпрНоменклатура.Ссылка В ИЕРАРХИИ(&Номенклатура)
		|	И СпрНоменклатура.ПометкаУдаления = ЛОЖЬ
		|	И СпрНоменклатура.ЭтоГруппа = ЛОЖЬ
		|	И ТаблицаПересчета.Номенклатура ЕСТЬ NULL
		|
		|УПОРЯДОЧИТЬ ПО
		|	СпрНоменклатура.Наименование";
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.Прямой);
	
	Если Не Выборка.Количество() Тогда
	
		Возврат;
	
	КонецЕсли;
	
	Пока Выборка.Следующий() Цикл
	
		ТаблицаПересчетаСтрока = ТаблицаПересчета.Добавить();
		
		ЗаполнитьЗначенияСвойств(ТаблицаПересчетаСтрока, Выборка);
	
	КонецЦикла;
	
	Сообщить("Добавлено " + Выборка.Количество() + " товаров");
	
	ТаблицаПересчета.Сортировать("Номенклатура", );
	
	ЭтаФорма.Модифицированность = Истина;
	
КонецПроцедуры // ПодборЗавершениеНаСервере()

&НаКлиенте
Процедура КомандаОчистить(Команда)
	
	Если Не ТаблицаПересчета.Количество() Тогда
	
		Возврат;
	
	КонецЕсли;
	
	ПоказатьВопрос(Новый ОписаниеОповещения("КомандаОчиститьЗавершение", ЭтаФорма), "Очистить таблицу?", РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры // КомандаОчистить()

&НаКлиенте
Процедура КомандаОчиститьЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Нет Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ТаблицаПересчета.Очистить();
	
КонецПроцедуры // КомандаОчиститьЗавершение()

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Перем ru;
	
	Элементы.ТаблицаПересчетаНоменклатура.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.Номенклатура");
	
	ru = Новый Соответствие;
	Для каждого СписокВыбораСтрока Из Элементы.ТаблицаПересчетаЕдиница.СписокВыбора Цикл
	
		Представление = СписокВыбораСтрока.Представление;
		
		НомПоз1 = СтрНайти(Представление, "(");
		НомПоз2 = СтрНайти(Представление, ")");
		
		ru.Вставить(Число(Сред(Представление, НомПоз1 + 1, НомПоз2 - НомПоз1 - 1)), СписокВыбораСтрока.Значение);
	
	КонецЦикла;
	
	ЭтаФорма.ru = Новый ФиксированноеСоответствие(ru);
	
	Для каждого ТаблицаПересчетаСтрокаОписание Из Параметры.ТаблицаПересчета Цикл
		
		ТаблицаПересчетаСтрока = ТаблицаПересчета.Добавить();
		
		ЗаполнитьЗначенияСвойств(ТаблицаПересчетаСтрока, ТаблицаПересчетаСтрокаОписание);
		
		ТаблицаПересчетаСтрока.ru = ru[ТаблицаПересчетаСтрокаОписание.ru];
	
	КонецЦикла;
	
КонецПроцедуры // ПриСозданииНаСервере()

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
КонецПроцедуры // ПриОткрытии()

#Область РаботаСExcelКлиент

&НаКлиенте
Функция	ВыбратьИПрочитатьФайл() Экспорт
	ДВФ = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДВФ.Заголовок = "Выберите файл";
	ДВФ.Фильтр = "Файлы Excel|*.xls*|Все файлы|*.*";
	
	Если Не ДВФ.Выбрать() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Файл = Новый Файл(ДВФ.ПолноеИмяФайла);
	
	МассивСтрок = ПрочитатьФайлНаСервере(Файл.Расширение, Новый ДвоичныеДанные(Файл.ПолноеИмя));
	
	Результат = Новый Структура;
	Результат.Вставить("МассивСтрок"	, МассивСтрок);
	Результат.Вставить("Файл"			, Файл);
	
	Возврат Результат;
КонецФункции // ВыбратьИПрочитатьФайл()

&НаКлиенте
Функция ВыбратьИПрочитатьФайл_Номенклатура() Экспорт
	Результат = ВыбратьИПрочитатьФайл();
	
	Если Результат = Неопределено или Не Результат.МассивСтрок.Количество() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	МассивНоменклатуры = МассивСтрокExcel_ПреобразоватьВМассивНоменклатуры(Результат.МассивСтрок);
	
	Если Не МассивНоменклатуры.Количество() Тогда
		Возврат Неопределено;
	КонецЕсли;

	Возврат МассивНоменклатуры;

КонецФункции // ВыбратьИПрочитатьФайл_Номенклатура()

#КонецОбласти

#Область РаботаСExcelСервер

&НаСервере
Функция	ПрочитатьФайлНаСервере(Знач Расширение, Знач ДД) Экспорт
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла(Расширение);
	ДД.Записать(ИмяВременногоФайла);
	
	ТД = Новый ТабличныйДокумент;
	
	Попытка
		ТД.Прочитать(ИмяВременногоФайла, СпособЧтенияЗначенийТабличногоДокумента.Текст);
	Исключение
		Сообщить(ОписаниеОшибки());
		УдалитьФайлы(ИмяВременногоФайла);
		Возврат Неопределено;
	КонецПопытки;
	УдалитьФайлы(ИмяВременногоФайла);
	
	МассивСтрок = Новый Массив;
	
	Для НомерСтроки = 1 По ТД.ВысотаТаблицы Цикл
		ВсеПусто		= Истина;
		СтрокаОписание	= Новый Массив;
		
		Для НомерСтолбца = 1 По ТД.ШиринаТаблицы Цикл
			Текст = СокрЛП(ТД.Область(НомерСтроки, НомерСтолбца, НомерСтроки, НомерСтолбца).Текст);
			СтрокаОписание.Добавить(Текст);
			Если Не ПустаяСтрока(Текст) Тогда
				ВсеПусто = Ложь;
			КонецЕсли;
		КонецЦикла;
		
		Если ВсеПусто Тогда
			Прервать;
		КонецЕсли;
		
		МассивСтрок.Добавить(СтрокаОписание);
	КонецЦикла;
	
	Возврат МассивСтрок;
КонецФункции // ПрочитатьФайлНаСервере()

&НаСервере
Функция МассивСтрокExcel_ПреобразоватьВМассивНоменклатуры(Знач МассивСтрок) Экспорт
	Перем МассивНоменклатуры, СтрокаЗаголовка, ОписаниеКолонок;
	
	СтрокаЗаголовка = МассивСтрок[0];
	
	ОписаниеКолонок = Новый Структура;
	ОписаниеКолонок.Вставить("Код"				, СтрокаЗаголовка.Найти("Код"));
	ОписаниеКолонок.Вставить("Наименование"		, СтрокаЗаголовка.Найти("Наименование"));
	ОписаниеКолонок.Вставить("Артикул"			, СтрокаЗаголовка.Найти("Артикул"));
	ОписаниеКолонок.Вставить("Коэффициент"		, СтрокаЗаголовка.Найти("Коэффициент"));
	ОписаниеКолонок.Вставить("ru"				, СтрокаЗаголовка.Найти("Единица"));
	
	Если	Неопределено = ОписаниеКолонок.Код
		и	Неопределено = ОписаниеКолонок.Наименование
		и	Неопределено = ОписаниеКолонок.Артикул
	Тогда
		
		Сообщить("Не найдено ни одной из колонок: ""Код"", ""Наименование"", ""Артикул""!");
	КонецЕсли;
	
	МассивНоменклатуры	= Новый Массив;
	Результат			= Новый Массив;
	
	ОТ_Число = Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(10, 3, ДопустимыйЗнак.Неотрицательный));
	
	Единицы = Элементы.ТаблицаПересчетаЕдиница.СписокВыбора;
	
	Для х = 1 По МассивСтрок.Количество() - 1 Цикл
		СтрокаОписание = МассивСтрок[х];
		
		ДанныеСтроки = Новый Структура;
		Для каждого КлючИЗначение Из ОписаниеКолонок Цикл
		
			ДанныеСтроки.Вставить(КлючИЗначение.Ключ, ?(Неопределено <> КлючИЗначение.Значение, СокрЛП(СтрокаОписание[КлючИЗначение.Значение]), ""));
		
		КонецЦикла;
		
		Если ПустаяСтрока(ДанныеСтроки.Код) и ПустаяСтрока(ДанныеСтроки.Артикул) и ПустаяСтрока(ДанныеСтроки.Наименование) Тогда
			Продолжить;
		КонецЕсли;
		
		Номенклатура = Справочники.Номенклатура.ПустаяСсылка();
		
		Если Не ПустаяСтрока(ДанныеСтроки.Код) Тогда
		
			Номенклатура = Справочники.Номенклатура.НайтиПоКоду(ДанныеСтроки.Код);
		
		КонецЕсли;
		
		Если Номенклатура.Пустая() и Не ПустаяСтрока(ДанныеСтроки.Артикул) Тогда
		
			Номенклатура = Справочники.Номенклатура.НайтиПоРеквизиту("Артикул", ДанныеСтроки.Артикул);
		
		КонецЕсли;
		
		Если Номенклатура.Пустая() и Не ПустаяСтрока(ДанныеСтроки.Наименование) Тогда
		
			Номенклатура = Справочники.Номенклатура.НайтиПоНаименованию(ДанныеСтроки.Наименование, Истина);
		
		КонецЕсли;
		
		Если Номенклатура.Пустая() Тогда
			Сообщить(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				"Не найдена номенклатура: код ""%1"", артикул ""%2"", наименование ""%3"""
				, ДанныеСтроки.Код
				, ДанныеСтроки.Артикул
				, ДанныеСтроки.Наименование
			));
			
			Продолжить;
		КонецЕсли;
		
		//ЕдиницаИзмерения = Справочники.УпаковкиЕдиницыИзмерения.ПустаяСсылка();
		//Если ЗначениеЗаполнено(ДанныеСтроки.ЕдиницаИзмерения) Тогда
		//
		//	ЕдиницаИзмерения = Справочники.УпаковкиЕдиницыИзмерения.НайтиПоНаименованию(
		//		ДанныеСтроки.ЕдиницаИзмерения
		//		, Истина
		//		,,Справочники.НаборыУпаковок.БазовыеЕдиницыИзмерения
		//	);
		//	Если ЕдиницаИзмерения.Пустая() Тогда
		//	
		//		Сообщить("Не найдена единица """ + ДанныеСтроки.ЕдиницаИзмерения + """!");
		//	
		//	КонецЕсли;
		//
		//КонецЕсли;
		
		ЕдиницыСтрока = Единицы.НайтиПоЗначению(СокрЛП(ДанныеСтроки.ru));
		Если ЕдиницыСтрока <> Неопределено Тогда
		
			ДанныеСтроки.ru = ЕдиницыСтрока.Значение;
		
		КонецЕсли;
		
		Если МассивНоменклатуры.Найти(Номенклатура) = Неопределено Тогда
			МассивНоменклатуры.Добавить(Номенклатура);
			
			ДанныеСтроки.Коэффициент = ОТ_Число.ПривестиЗначение(ДанныеСтроки.Коэффициент);
			
			ЕдиницыСтрока = Единицы.НайтиПоЗначению(СокрЛП(ДанныеСтроки.ru));
			Если ЕдиницыСтрока <> Неопределено Тогда
			
				ДанныеСтроки.ru = ЕдиницыСтрока.Значение;
			
			КонецЕсли;
			
			ДанныеСтроки.Вставить("Номенклатура", Номенклатура);
			
			Результат.Добавить(ДанныеСтроки);
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;
КонецФункции // МассивСтрокExcel_ПреобразоватьВМассивНоменклатуры()

#КонецОбласти

&НаКлиенте
Процедура ТаблицаПересчетаПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры // ТаблицаПересчетаПриИзменении()

&НаКлиенте
Процедура КомандаОк(Команда)
	
	Закрыть(ТаблицаПересчета());
	
КонецПроцедуры // КомандаОк()

&НаКлиенте
Функция ТаблицаПересчета()

	Перем ru;
	
	ru = Новый Соответствие;
	Для каждого КлючИЗначение Из ЭтаФорма.ru Цикл
	
		ru.Вставить(КлючИЗначение.Значение, КлючИЗначение.Ключ);
	
	КонецЦикла;
	
	ЭтаФорма.ru = Новый ФиксированноеСоответствие(ru);
	ЭтаФорма.ЗакрыватьФормуБезПредупреждения = Истина;
	
	Результат = Новый Структура;
	Результат.Вставить("ТаблицаПересчета", Новый Массив);
	
	Для каждого ТаблицаПересчетаСтрока Из ТаблицаПересчета Цикл
	
		ТаблицаПересчетаСтрокаОписание = Новый Структура;
		ТаблицаПересчетаСтрокаОписание.Вставить("Используется"	, ТаблицаПересчетаСтрока.Используется);
		ТаблицаПересчетаСтрокаОписание.Вставить("Номенклатура"	, ТаблицаПересчетаСтрока.Номенклатура);
		ТаблицаПересчетаСтрокаОписание.Вставить("Коэффициент"	, ТаблицаПересчетаСтрока.Коэффициент);
		ТаблицаПересчетаСтрокаОписание.Вставить("ru"			, ru[ТаблицаПересчетаСтрока.ru]);
		
		Результат.ТаблицаПересчета.Добавить(ТаблицаПересчетаСтрокаОписание);
	
	КонецЦикла;
	
	Возврат Результат;

КонецФункции // ТаблицаПересчета()

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если Не Модифицированность или ЗавершениеРаботы или ЭтаФорма.ЗакрыватьФормуБезПредупреждения Тогда
	
		Возврат;
	
	КонецЕсли;
	
	Отказ = Истина;
	
	ПоказатьВопрос(
		Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтаФорма)
		, "Сохранить изменения?"
		, РежимДиалогаВопрос.ДаНетОтмена
	);
	
КонецПроцедуры // ПередЗакрытием()

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Нет Тогда
		
		ЭтаФорма.ЗакрыватьФормуБезПредупреждения = Истина;
		Закрыть();
		
		Возврат;
		
	ИначеЕсли РезультатВопроса = КодВозвратаДиалога.Да Тогда
		
		ЭтаФорма.ЗакрыватьФормуБезПредупреждения = Истина;
		Закрыть(ТаблицаПересчета());
		
		Возврат;
		
	КонецЕсли;
	
КонецПроцедуры // ПередЗакрытиемЗавершение()

&НаКлиенте
Процедура КомандаЗаполнитьИзЭксель(Команда)
	
	МассивНоменклатуры = ВыбратьИПрочитатьФайл_Номенклатура();
	
	Если МассивНоменклатуры = Неопределено Тогда
	
		Возврат;
	
	КонецЕсли;
	
	Для каждого ТаблицаПересчетаСтрокаОписание Из МассивНоменклатуры Цикл
	
		НайденныеСтроки = ТаблицаПересчета.НайтиСтроки(Новый Структура("Номенклатура", ТаблицаПересчетаСтрокаОписание.Номенклатура));
		
		Если НайденныеСтроки.Количество() Тогда
		
			ТаблицаПересчетаСтрока = НайденныеСтроки[0];
			
		Иначе
			
			ТаблицаПересчетаСтрока = ТаблицаПересчета.Добавить();
			
		КонецЕсли;
		
		ТаблицаПересчетаСтрока.Используется = Истина;
		
		Для каждого КлючИЗначение Из ТаблицаПересчетаСтрокаОписание Цикл
			
			Если Не ЗначениеЗаполнено(КлючИЗначение.Значение) Тогда
				
				ТаблицаПересчетаСтрокаОписание.Удалить(КлючИЗначение.Ключ);
				
			КонецЕсли;
			
		КонецЦикла;
		
		ЗаполнитьЗначенияСвойств(ТаблицаПересчетаСтрока, ТаблицаПересчетаСтрокаОписание);
	КонецЦикла;
	
	ЭтаФорма.Модифицированность = Истина;
	
КонецПроцедуры // КомандаЗаполнитьИзЭксель()

&НаКлиенте
Процедура ТаблицаПересчетаПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Перем ТекущиеДанные;
	
	Если Не НоваяСтрока Тогда
	
		Возврат;
	
	КонецЕсли;
	
	ТекущиеДанные = Элементы.ТаблицаПересчета.ТекущиеДанные;
	ТекущиеДанные.Используется = Истина;
	
КонецПроцедуры // ТаблицаПересчетаПриНачалеРедактирования()

&НаКлиенте
Процедура КомандаЗаполнитьЕдиницу(Команда)
	Элементы.ТаблицаПересчетаЕдиница.СписокВыбора.ПоказатьВыборЭлемента(
		Новый ОписаниеОповещения("ЗаполнитьЕдиницуВыбор", ЭтаФорма)
	);
КонецПроцедуры // КомандаЗаполнитьЕдиницу()

&НаКлиенте
Процедура ЗаполнитьЕдиницуВыбор(Знач ВыбраннаяСтрока, Знач ДополнительныеПараметры) Экспорт

	Если ВыбраннаяСтрока = Неопределено Тогда
	
		Возврат;
	
	КонецЕсли;
	
	Для каждого ТаблицаПересчетаСтрокаИдентификатор Из Элементы.ТаблицаПересчета.ВыделенныеСтроки Цикл
		
		ТаблицаПересчетаСтрока = ТаблицаПересчета.НайтиПоИдентификатору(ТаблицаПересчетаСтрокаИдентификатор);
		
		ТаблицаПересчетаСтрока.ru = ВыбраннаяСтрока.Значение;
	
	КонецЦикла;

КонецПроцедуры // ЗаполнитьЕдиницуВыбор()

&НаКлиенте
Процедура КомандаЗаполнитьКоэффициент(Команда)
	ПоказатьВводЧисла(
		Новый ОписаниеОповещения("ЗаполнитьКоэффициентВыбор", ЭтаФорма)
		, 1
		, "Введите коэффициент пересчета"
		, 10
		, 0
	);
КонецПроцедуры // КомандаЗаполнитьКоэффициент()

&НаКлиенте
Процедура ЗаполнитьКоэффициентВыбор(Знач Коэффициент, Знач ДополнительныеПараметры) Экспорт

	Если Не ЗначениеЗаполнено(Коэффициент) Тогда
	
		Возврат;
	
	КонецЕсли;

	Для каждого ТаблицаПересчетаСтрокаИдентификатор Из Элементы.ТаблицаПересчета.ВыделенныеСтроки Цикл
		
		ТаблицаПересчетаСтрока = ТаблицаПересчета.НайтиПоИдентификатору(ТаблицаПересчетаСтрокаИдентификатор);
		
		ТаблицаПересчетаСтрока.Коэффициент = Коэффициент;
	
	КонецЦикла;
КонецПроцедуры // ЗаполнитьКоэффициентВыбор()

&НаКлиенте
Процедура КомандаЗаполнитьПоНастройкам(Команда)
	
	НастройкиВыгрузки = ЭтаФорма.ВладелецФормы.ПараметрыВыгрузкиИзФормыВсеНаКлиенте();
	
	Отборы = ОтборыПолучить(НастройкиВыгрузки);
	
	Если Отборы.Количество() > 1 Тогда
	
		ПараметрыОткрытия = Новый Структура;
		ПараметрыОткрытия.Вставить("СписокЗначений", Отборы);
		ПараметрыОткрытия.Вставить("Заголовок", "Выберите, по какой настройке заполнить товары");
	
		ДополнительныеПараметры = Новый Структура;
		
		ОткрытьФорму(
				ЭтаФорма.ВладелецФормы.Переменные.ПолноеИмяОбъекта + ".Форма.ВыборИзСпискаУправляемая"
			,	ПараметрыОткрытия
			,	ЭтаФорма
			,,,
			,	Новый ОписаниеОповещения("КомандаЗаполнитьПоНастройкамЗавершение", ЭтаФорма, ДополнительныеПараметры)
			,	РежимОткрытияОкнаФормы.БлокироватьОкноВладельца
		);
		
        Возврат;
		
	КонецЕсли;
	
	Если Не Отборы.Количество() Тогда
	
		ПоказатьПредупреждение(, "Отсутствуют доступные настройки!", 10, "Ошибка");
		Возврат;
	
	КонецЕсли;
	
	ЗаполнитьПоНастройкам(Отборы);
	
КонецПроцедуры // КомандаЗаполнитьПоНастройкам()

&НаКлиенте
Процедура КомандаЗаполнитьПоНастройкамЗавершение(Знач Отборы, Знач ДополнительныеПараметры) Экспорт

	Если Не ЗначениеЗаполнено(Отборы) Тогда
	
		Возврат;
	
	КонецЕсли;
	
	Для х = -Отборы.Количество() + 1 По 0 Цикл
	
		ОтборыСтрока = Отборы[-х];
		
		Если Не ОтборыСтрока.Пометка Тогда
		
			Отборы.Удалить(ОтборыСтрока);
		
		КонецЕсли;
	
	КонецЦикла;
	
	Если Не ЗначениеЗаполнено(Отборы) Тогда
	
		Возврат;
	
	КонецЕсли;

	ЗаполнитьПоНастройкам(Отборы);
	
КонецПроцедуры // КомандаЗаполнитьПоНастройкамЗавершение()

&НаСервере
Процедура ЗаполнитьПоНастройкам(Знач Отборы)
	
	Перем Товары;
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	
	НоменклатураМассив = Новый Массив;
	
	Для каждого ОтборыСтрока Из Отборы Цикл
		
		ОтборСкдОписание = ОтборыСтрока.Значение;
		
		Товары = ОбработкаОбъект.СкдВыполнить(ОбработкаОбъект.Скд(ОтборСкдОписание.Тип, ОтборСкдОписание.Отбор));
		
		Если Не ЗначениеЗаполнено(Товары) Тогда
		
			Продолжить;
		
		КонецЕсли;
		
		Для каждого Товар Из Товары Цикл
			
			Если	НоменклатураМассив.Найти(Товар) <> Неопределено
				или ТаблицаПересчета.НайтиСтроки(Новый Структура("Номенклатура", Товар)).Количество()
			Тогда
			
				Продолжить;
			КонецЕсли;
			
			НоменклатураМассив.Добавить(Товар);
			
		КонецЦикла;
	
	КонецЦикла;
	
	ПодборЗавершениеНаСервере(НоменклатураМассив);

КонецПроцедуры // ЗаполнитьПоНастройкам()

&НаСервере
Функция ОтборыПолучить(Знач НастройкиВыгрузки)
	
	ОбработкаОбъект					= РеквизитФормыВЗначение("Объект");
	ШаблонНастроек					= ОбработкаОбъект.ШаблонНастроек();
	
	ОтборСкдОписаниеНоменклатура	= Неопределено;
	
	Для каждого Колонка Из ШаблонНастроек.Настройка.Колонки Цикл
		ОтборИмя = Колонка.Имя;
		
		ОтборСкдОписание = ОбработкаОбъект.ОтборСкдОписание(ОтборИмя, ШаблонНастроек);
		
		Если ОтборСкдОписание = Неопределено Тогда
		
			Продолжить;
		
		КонецЕсли;
		
		Если ОтборСкдОписание.Имя = "ОтборНоменклатура" Тогда
		
			ОтборСкдОписаниеНоменклатура = ОтборСкдОписание;
			
			Прервать;
		
		КонецЕсли;
		
	КонецЦикла;
	
	Отборы = Новый СписокЗначений;
	
	Если ОтборСкдОписаниеНоменклатура = Неопределено Тогда
	
		Возврат Отборы;
	
	КонецЕсли;
	
	Для каждого Настройка Из НастройкиВыгрузки.Настройки Цикл
	
		Если Не Настройка.НастройкаИспользуется Тогда
		
			Продолжить;
		
		КонецЕсли;
		
		ОтборСкдОписание = Новый Структура;
		ОтборСкдОписание.Вставить("Тип"		, ОтборСкдОписаниеНоменклатура.Тип);
		ОтборСкдОписание.Вставить("Отбор"	, Настройка[ОтборСкдОписаниеНоменклатура.ОтборИмя]);
		
		Отборы.Добавить(ОтборСкдОписание, Настройка.НастройкаИмя, Истина);
	
	КонецЦикла;
	
	Возврат Отборы;
	
КонецФункции // ОтборыПолучить()
