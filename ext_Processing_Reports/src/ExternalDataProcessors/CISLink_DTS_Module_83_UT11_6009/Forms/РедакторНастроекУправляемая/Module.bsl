
&НаКлиенте
Процедура КомандаНастройкаИспользуетсяУстановитьФлажки(Команда)
	Для каждого РедакторНастроекСтрока Из РедакторНастроек Цикл
	
		РедакторНастроекСтрока.НастройкаИспользуется = Истина;
	
	КонецЦикла;
КонецПроцедуры // КомандаНастройкаИспользуетсяУстановитьФлажки()

&НаКлиенте
Процедура КомандаНастройкаИспользуетсяСнятьФлажки(Команда)
	Для каждого РедакторНастроекСтрока Из РедакторНастроек Цикл
	
		РедакторНастроекСтрока.НастройкаИспользуется = Ложь;
	
	КонецЦикла;
КонецПроцедуры // КомандаНастройкаИспользуетсяСнятьФлажки()

&НаСервере
Процедура ЗакрытьРедактированиеЭлемента(Знач Элемент)

	Элемент.РедактированиеТекста	= Ложь;
	Элемент.КнопкаОчистки			= Ложь;
	Элемент.КнопкаВыбора			= Ложь;
	Элемент.КнопкаВыпадающегоСписка	= Ложь;
	Элемент.ВыбиратьТип				= Ложь;
	Элемент.ИсторияВыбораПриВводе	= ИсторияВыбораПриВводе.НеИспользовать;
	
	Элемент.УстановитьДействие("Очистка"				, "НеРедактируемыйЭлемент_Очистка");
	Элемент.УстановитьДействие("НачалоВыбора"			, "НеРедактируемыйЭлемент_НачалоВыбора");
	Элемент.УстановитьДействие("НачалоВыбораИзСписка"	, "НеРедактируемыйЭлемент_НачалоВыбораИзСписка");

КонецПроцедуры // ЗакрытьРедактированиеЭлемента()

&НаКлиенте
Процедура НеРедактируемыйЭлемент_Очистка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры // НеРедактируемыйЭлемент_Очистка()

&НаКлиенте
Процедура НеРедактируемыйЭлемент_НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры // НеРедактируемыйЭлемент_НачалоВыбора()

&НаКлиенте
Процедура НеРедактируемыйЭлемент_НачалоВыбораИзСписка(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры // НеРедактируемыйЭлемент_НачалоВыбораИзСписка()

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	
	ЭтаФорма.Переменные = Новый Структура;
	ЭтаФорма.Переменные.Вставить("ВсеПроизводители"			, Параметры.ВсеПроизводители);
	ЭтаФорма.Переменные.Вставить("ПроизводительСписокВыбора", Новый СписокЗначений);
	ЭтаФорма.Переменные.Вставить("ПолноеИмяОбъекта"			, ОбработкаОбъект.Метаданные().ПолноеИмя());
	ЭтаФорма.Переменные.Вставить("РежимРаботыВОблаке"		, Параметры.РежимРаботыВОблаке);
	
	ЭтаФорма.РежимРаботыКлиент = Параметры.РежимРаботыКлиент;
	
	ЗакрытьРедактированиеЭлемента(Элементы.РедакторНастроекНастройкаИмя);
	
	Для каждого ПроизводительСписокВыбораСтрока Из Параметры.ПроизводительСписокВыбора Цикл
		
		ЭтаФорма.Переменные.ПроизводительСписокВыбора.Добавить(
			ПроизводительСписокВыбораСтрока.Представление
			, Формат(ПроизводительСписокВыбораСтрока.Значение, "ЧН=; ЧГ=0")
			, ПроизводительСписокВыбораСтрока.Пометка
			, ПроизводительСписокВыбораСтрока.Картинка
		);
		
		Элементы.РедакторНастроекПроизводитель.СписокВыбора.Добавить(
			ПроизводительСписокВыбораСтрока.Представление
			, ПроизводительСписокВыбораСтрока.Представление
			, ПроизводительСписокВыбораСтрока.Пометка
			, ПроизводительСписокВыбораСтрока.Картинка
		);
	
	КонецЦикла;
	
	Для каждого Настройка Из Параметры.Настройки Цикл
		
		ПроизводительОписание = ЭтаФорма.Переменные.ВсеПроизводители[Настройка.manfid];
		
		РедакторНастроекСтрока = РедакторНастроек.Добавить();
		
		ЗаполнитьЗначенияСвойств(РедакторНастроекСтрока, Настройка);
		
		РедакторНастроекСтрока.Производитель = Параметры.ПроизводительСписокВыбора.НайтиПоЗначению(
			РедакторНастроекСтрока.manfid
		).Представление;
		
		ВерсииСтрока = ПроизводительОписание.Версии.НайтиПоЗначению(Настройка.Версия);
		Если ВерсииСтрока <> Неопределено Тогда
		
			РедакторНастроекСтрока.ВерсияПредставление = ВерсииСтрока.Представление;
		
		КонецЕсли;
	
	КонецЦикла;
	
КонецПроцедуры // ПриСозданииНаСервере()

&НаКлиенте
Процедура РедакторНастроекПроизводительПриИзменении(Элемент)
	Перем ВсеПроизводители;
	
	ВсеПроизводители		= ЭтаФорма.Переменные.ВсеПроизводители;
	
	ТекущиеДанные			= Элементы.РедакторНастроек.ТекущиеДанные;
	
	ПроизводительБыло		= "";
	manfid					= Формат(ТекущиеДанные.manfid, "ЧН=; ЧГ=0");
	Для каждого ПроизводительСписокВыбораСтрока Из ЭтаФорма.Переменные.ПроизводительСписокВыбора Цикл
	
		Если ПроизводительСписокВыбораСтрока.Представление = manfid Тогда
		
			ПроизводительБыло = ПроизводительСписокВыбораСтрока.Значение;
		
		КонецЕсли;
	
	КонецЦикла;
	
	ТекущиеДанные.manfid = Число(ЭтаФорма.Переменные.ПроизводительСписокВыбора.НайтиПоЗначению(ТекущиеДанные.Производитель).Представление);
	
	ПроизводительОписание = ВсеПроизводители[ТекущиеДанные.manfid];
	ТекущиеДанные.ПериодВыгрузкиДней = ПроизводительОписание.ПериодВыгрузкиДней;
	Если ПустаяСтрока(ТекущиеДанные.НастройкаИмя) и ПустаяСтрока(ТекущиеДанные.НастройкаИмяНовое) Тогда
	
		ТекущиеДанные.НастройкаИмяНовое = "Настройка №" + РедакторНастроек.Количество() + ". " + ПроизводительОписание.Наименование;
	
	КонецЕсли;
	
	ЭтаФорма.Модифицированность = Истина;
	
	ПроизводительБыло	= СокрЛП(Лев(ПроизводительБыло, СтрНайти(ПроизводительБыло, "[") - 1));
	Производитель		= СокрЛП(Лев(ТекущиеДанные.Производитель, СтрНайти(ТекущиеДанные.Производитель, "[") - 1));
	
	НастройкаИмяНовое = ?(Не ПустаяСтрока(ТекущиеДанные.НастройкаИмяНовое), ТекущиеДанные.НастройкаИмяНовое, ТекущиеДанные.НастройкаИмя);
	
	ТекущиеДанные.НастройкаИмяНовое = СтрЗаменить(НастройкаИмяНовое, ПроизводительБыло, Производитель);
	
	ВерсияЗаполнитьСписокВыбора(ТекущиеДанные);
	
КонецПроцедуры // РедакторНастроекПроизводительПриИзменении()

&НаКлиенте
Процедура РедакторНастроекПроизводительОчистка(Элемент, СтандартнаяОбработка)
	 СтандартнаяОбработка = Ложь;
КонецПроцедуры // РедакторНастроекПроизводительОчистка()

&НаКлиенте
Процедура КомандаОК(Команда)
	
	Если Не РедакторНастроек.Количество() Тогда
	
		Сообщить("Нужна, как минимум, одна настройка!");
		Возврат;
	
	КонецЕсли;
	
	Результат = Новый Структура;
	Результат.Вставить("Настройки", Новый Массив);
	
	УникальныеИменаНастроек = Новый Массив;
	
	Отказ = Ложь;
	
	Для каждого Настройка Из РедакторНастроек Цикл
		
		Поле			= ?(Не ПустаяСтрока(Настройка.НастройкаИмяНовое), "НастройкаИмяНовое", "НастройкаИмя");
		НастройкаИмя	= Настройка[Поле];
		НомерСтроки		= РедакторНастроек.Индекс(Настройка) + 1;
		
		Если УникальныеИменаНастроек.Найти(НастройкаИмя) <> Неопределено Тогда
		
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				"Имя настройки """ + НастройкаИмя + """ не уникально!"
				,, ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("РедакторНастроек", НомерСтроки, Поле)
				,, Отказ
			);
		
		КонецЕсли;
		
		УникальныеИменаНастроек.Добавить(НастройкаИмя);
		
		Если Не ЗначениеЗаполнено(Настройка.manfid) Тогда
		
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				"Настройка """ + НастройкаИмя + """ не заполнен производитель!"
				,, ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("РедакторНастроек", НомерСтроки, "Производитель")
				,, Отказ
			);
		
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Настройка.ПериодВыгрузкиДней) Тогда
		
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				"Настройка """ + НастройкаИмя + """ не заполнено количество дней выгрузки!"
				,, ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("РедакторНастроек", НомерСтроки, "ПериодВыгрузкиДней")
				,, Отказ
			);
		
		КонецЕсли;
		
		НастройкаДляРедактирования = Новый Структура("НастройкаИспользуется,НастройкаИмя,НастройкаИмяНовое,Версия,manfid,ПериодВыгрузкиДней,КаталогВыгрузки");
		ЗаполнитьЗначенияСвойств(НастройкаДляРедактирования, Настройка);
		
		Результат.Настройки.Добавить(НастройкаДляРедактирования);
	
	КонецЦикла;
	
	Если Отказ Тогда
	
		Возврат;
	
	КонецЕсли;
	
	ЭтаФорма.Закрыть(Результат);
КонецПроцедуры // КомандаОК()

&НаКлиенте
Процедура РедакторНастроекПередНачаломИзменения(Элемент, Отказ)
	ТекущиеДанные = Элемент.ТекущиеДанные;
	
	Если Элемент.ТекущийЭлемент = Элементы.РедакторНастроекНастройкаИмяНовое Тогда
	
		Если ПустаяСтрока(ТекущиеДанные.НастройкаИмяНовое) Тогда
		
			ТекущиеДанные.НастройкаИмяНовое = ТекущиеДанные.НастройкаИмя;
		
		КонецЕсли;
	
	КонецЕсли;
	
	ВерсияЗаполнитьСписокВыбора(ТекущиеДанные);
	
КонецПроцедуры // РедакторНастроекПередНачаломИзменения()

&НаКлиенте
Процедура ВерсияЗаполнитьСписокВыбора(Знач ТекущиеДанные)

	СписокВыбора = Элементы.РедакторНастроекВерсияПредставление.СписокВыбора;
	СписокВыбора.Очистить();
	
	ПроизводительОписание = ЭтаФорма.Переменные.ВсеПроизводители[ТекущиеДанные.manfid];
	Для каждого ВерсияОписание Из ПроизводительОписание.Версии Цикл
		
		СписокВыбораСтрока = СписокВыбора.Добавить(
			ВерсияОписание.Представление
			, ВерсияОписание.Представление
			, ВерсияОписание.Пометка
			, ВерсияОписание.Картинка
		);
		
	КонецЦикла;

	ВерсияПриИзменении(ТекущиеДанные);
КонецПроцедуры // ВерсияЗаполнитьСписокВыбора()

&НаКлиенте
Процедура ВерсияПриИзменении(Знач ТекущиеДанные)

	ПроизводительОписание = ЭтаФорма.Переменные.ВсеПроизводители[ТекущиеДанные.manfid];
	
	Для каждого ВерсияОписание Из ПроизводительОписание.Версии Цикл
		
		Если ВерсияОписание.Представление = ТекущиеДанные.ВерсияПредставление Тогда
		
			ТекущиеДанные.Версия = ВерсияОписание.Значение;
			Возврат;
		
		КонецЕсли;
		
	КонецЦикла;

	Если ПроизводительОписание.Версии.Количество() Тогда
		
		ВерсияОписание = ПроизводительОписание.Версии[0];
	
		ТекущиеДанные.Версия				= ВерсияОписание.Значение;
		ТекущиеДанные.ВерсияПредставление	= ВерсияОписание.Представление;
		
	Иначе
	
		ТекущиеДанные.Версия				= 0;
		ТекущиеДанные.ВерсияПредставление	= "";
		
	КонецЕсли;
	
КонецПроцедуры // ВерсияПриИзменении()

&НаКлиенте
Процедура РедакторНастроекПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	ТекущиеДанные = Элемент.ТекущиеДанные;
	
	ТекущиеДанные.НастройкаИмяНовое = СокрЛП(ТекущиеДанные.НастройкаИмяНовое);
	Если ТекущиеДанные.НастройкаИмяНовое = ТекущиеДанные.НастройкаИмя Тогда
	
		ТекущиеДанные.НастройкаИмяНовое = "";
	
	КонецЕсли;
КонецПроцедуры // РедакторНастроекПриОкончанииРедактирования()

&НаКлиенте
Процедура РедакторНастроекПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если НоваяСтрока Тогда
	
		ТекущиеДанные.НастройкаИспользуется = Истина;
	
	КонецЕсли;
КонецПроцедуры // РедакторНастроекПриНачалеРедактирования()

&НаКлиенте
Процедура КомандаРедакторНастроекЗаполнить(Команда)
	
	//ТекущиеДанные = Элементы.РедакторНастроек.ТекущиеДанные;
	
	Для каждого КлючИЗначение Из ЭтаФорма.Переменные.ВсеПроизводители Цикл
		
		ПроизводительОписание = КлючИЗначение.Значение;
		
		Если Не ПроизводительОписание.Версии.Количество() Тогда
		
			Версии = Новый СписокЗначений;
			Версии.Добавить(0, "");
			
		Иначе
			
			Версии = ПроизводительОписание.Версии;
			
		КонецЕсли;
		
		Для каждого ВерсииСтрока Из Версии Цикл
			
			Версия	= ВерсииСтрока.Значение;
			Найдено = РедакторНастроек.НайтиСтроки(Новый Структура("manfid,Версия", ПроизводительОписание.manfid, Версия)).Количество();
			
			Если Найдено Тогда
			
				Продолжить;
			
			КонецЕсли;
			
			НоваяСтрока = РедакторНастроек.Добавить();
			НоваяСтрока.НастройкаИспользуется	= Истина;
			НоваяСтрока.manfid					= ПроизводительОписание.manfid;
			НоваяСтрока.Версия					= Версия;
			НоваяСтрока.ВерсияПредставление		= ВерсииСтрока.Представление;
			НоваяСтрока.ПериодВыгрузкиДней		= ПроизводительОписание.ПериодВыгрузкиДней;
			НоваяСтрока.Производитель			= ПроизводительОписание.Наименование + " [" + Формат(ПроизводительОписание.manfid, "ЧН=; ЧГ=0") + "]";
			НоваяСтрока.НастройкаИмяНовое		= "Настройка №" + РедакторНастроек.Количество() + ". " + ПроизводительОписание.Наименование;
		
		КонецЦикла;
	
	КонецЦикла;
	
КонецПроцедуры // КомандаРедакторНастроекЗаполнить()

&НаКлиенте
Процедура РедакторНастроекВерсияПредставлениеПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.РедакторНастроек.ТекущиеДанные;
	
	ВерсияПриИзменении(ТекущиеДанные);
	
КонецПроцедуры // РедакторНастроекВерсияПредставлениеПриИзменении()

&НаКлиенте
Процедура КаталогВыгрузкиПриИзменении(Элемент)
	КаталогВыгрузки = СокрЛП(КаталогВыгрузки);
	
	Если ПустаяСтрока(КаталогВыгрузки) Тогда
		Возврат;
	КонецЕсли;
	
	КаталогВыгрузки = ОбщегоНазначенияКлиентСервер.ДобавитьКонечныйРазделительПути(КаталогВыгрузки);
	
	Если Не РежимРаботыКлиент Тогда
		
		ПроверитьДоступностьКаталогаНаСервере(КаталогВыгрузки);
		
	Иначе
		
		КаталогВыгрузкиДоступен(КаталогВыгрузки);
		
	КонецЕсли;
КонецПроцедуры // КаталогВыгрузкиПриИзменении()

&НаСервере
Функция ПроверитьДоступностьКаталогаНаСервере(Знач КаталогВыгрузки)
	
	Если ЭтаФорма.Переменные.РежимРаботыВОблаке Тогда
	
		КаталогВыгрузки = "";
		
		Возврат Ложь;
	
	КонецЕсли;
	
	Возврат РеквизитФормыВЗначение("Объект").КаталогВыгрузкиДоступен(КаталогВыгрузки);
	
КонецФункции // ПроверитьДоступностьКаталогаНаСервере()

&НаКлиенте
Функция КаталогВыгрузкиДоступен(Знач КаталогВыгрузки)
	
	Если ПустаяСтрока(КаталогВыгрузки) Тогда
	
		Возврат Ложь;
	
	КонецЕсли;
	
	Файл = Новый Файл(СокрЛП(КаталогВыгрузки));
	Если Не Файл.Существует() Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ИмяКомпьютераКлиент() + ". Выбранный путь не существует!");
		Возврат Ложь;
		
	ИначеЕсли Не Файл.ЭтоКаталог() Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ИмяКомпьютераКлиент() + ". Выбранный путь не является каталогом!");
		Возврат Ложь;
		
	КонецЕсли;
	
	ВременныйФайл = Файл.Путь + СтрЗаменить(Новый УникальныйИдентификатор, "-", "") + ".tmp";
	
	Попытка
		
		ЗаписьТекста = Новый ЗаписьТекста(ВременныйФайл);
		ЗаписьТекста.ЗаписатьСтроку(ТекущаяДата());
		ЗаписьТекста.Закрыть();
		
	Исключение
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ИмяКомпьютераКлиент() + ". Не могу записать тестовый файл в " + КаталогВыгрузки + "!");
		Возврат Ложь;
		
	КонецПопытки;
	
	УдалитьФайлы(ВременныйФайл);
	
	Возврат Истина;
КонецФункции // КаталогВыгрузкиДоступен()

&НаКлиенте
Функция ИмяКомпьютераКлиент()
	Перем ИмяКомпьютера;
	
	#Если ВебКлиент Тогда
		ИмяКомпьютера = "Этот компьютер";
	#Иначе
		ИмяКомпьютера = ИмяКомпьютера();
	#КонецЕсли
	
	Возврат ИмяКомпьютера;
КонецФункции // ИмяКомпьютераКлиент()

&НаКлиенте
Процедура КаталогВыгрузкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Перем КаталогВыгрузки;
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные	= Элементы.РедакторНастроек.ТекущиеДанные;
	КаталогВыгрузки	= ТекущиеДанные.КаталогВыгрузки;
	
	Если Не РежимРаботыКлиент Тогда
		
		Если ЭтаФорма.Переменные.РежимРаботыВОблаке Тогда
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("При работе в ""облаке"" недоступен выбор каталога на сервере!");
			
			ТекущиеДанные.КаталогВыгрузки = "";
			
			Возврат;
		КонецЕсли;
		
#Область НеРежимРаботыВОблаке

		Попытка
			
			ОткрытьФорму(
					ЭтаФорма.Переменные.ПолноеИмяОбъекта + ".Форма.ВыборКаталогаНаСервереУправляемая"
				,	Новый Структура("Каталог", КаталогВыгрузки)
				,	ЭтаФорма
				,,,,Новый ОписаниеОповещения("КаталогФайловВыбор", ЭтаФорма)
				,	РежимОткрытияОкнаФормы.БлокироватьОкноВладельца
			);
			Возврат;
			
		Исключение
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
			
		КонецПопытки;
		
#КонецОбласти

	КонецЕсли;
	
	ДВК = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	ДВК.ПолноеИмяФайла	= КаталогВыгрузки;
	ДВК.Каталог			= КаталогВыгрузки;
	Если НЕ ДВК.Выбрать() Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные.КаталогВыгрузки = ОбщегоНазначенияКлиентСервер.ДобавитьКонечныйРазделительПути(ДВК.Каталог);
	
	ЭтаФорма.Модифицированность = Истина;
	
КонецПроцедуры // КаталогВыгрузкиНачалоВыбора()

&НаКлиенте
Процедура КаталогФайловВыбор(Знач Каталог, Знач Параметр) Экспорт
	Если Каталог = Неопределено Тогда
		Возврат;
	ИначеЕсли ПустаяСтрока(Каталог) Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элементы.РедакторНастроек.ТекущиеДанные;
	
	ТекущиеДанные.КаталогВыгрузки	= СокрЛП(Каталог);
	Модифицированность				= Истина;
КонецПроцедуры // КаталогФайловВыбор()

&НаКлиенте
Процедура КаталогВыгрузкиОткрытие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	Если Не РежимРаботыКлиент Тогда
	
		Возврат;
	
	КонецЕсли;
	
	ЗапуститьПриложение(Элемент.ТекстРедактирования);
КонецПроцедуры // КаталогВыгрузкиОткрытие()

&НаКлиенте
Процедура КомандаКомандаРедакторНастроекПеренумеровать(Команда)
	
	Перем ДлинаНомера, ШаблонНомера, РедакторНастроекСтрока, НастройкаИмя, НомПоз, НастройкаИмяНовое;
	
	ДлинаНомера		= Формат(СтрДлина(Формат(РедакторНастроек.Количество(), "ЧН=; ЧГ=0")), "ЧН=; ЧГ=0");
	ШаблонНомера	= "ЧЦ=" + ДлинаНомера + "; ЧН=; ЧВН=; ЧГ=0";
	
	Для каждого РедакторНастроекСтрока Из РедакторНастроек Цикл
		
		НастройкаИмя = СокрЛП(РедакторНастроекСтрока["НастройкаИмя" + ?(Не ПустаяСтрока(РедакторНастроекСтрока.НастройкаИмяНовое), "Новое", "")]);
		Если Не СтрНачинаетсяС(НастройкаИмя, "Настройка №") Тогда
		
			Продолжить;
		
		КонецЕсли;
		
		НомПоз = СтрНайти(НастройкаИмя, ".");
		
		Если Не НомПоз Тогда
		
			Продолжить;
		
		КонецЕсли;
		
		НастройкаИмяНовое = "Настройка №" + Формат(1 + РедакторНастроек.Индекс(РедакторНастроекСтрока), ШаблонНомера) + ". " + СокрЛП(Сред(НастройкаИмя, НомПоз + 1));
		
		Если НастройкаИмя <> НастройкаИмяНовое Тогда
		
			РедакторНастроекСтрока.НастройкаИмяНовое = НастройкаИмяНовое;
		
		КонецЕсли;
		
	КонецЦикла;
КонецПроцедуры // КомандаКомандаРедакторНастроекПеренумеровать()