
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Перем Переменные;
	
	ОбработкаОбъект = ОбработкаОбъект();
	
	ДобавляемыеРеквизиты = Новый Массив;
	
	НовыйРеквизит = Новый РеквизитФормы("Переменные", Новый ОписаниеТипов());
	ДобавляемыеРеквизиты.Добавить(НовыйРеквизит);
	
	ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	
	Переменные = Новый Структура;
	
	Переменные.Вставить("ТаблицаГруппКлиентов"	, Параметры.ТаблицаГруппКлиентов);
	Переменные.Вставить("ОтборСкдОписание"		, Параметры.ОтборСкдОписание);
	
	ЭтаФорма.Переменные = Переменные;
	
	Для каждого ТаблицаГруппКлиентовСтрока Из Переменные.ТаблицаГруппКлиентов Цикл
	
		ЭтаФормаТаблицаГруппКлиентовСтрока = ЭтаФорма.ТаблицаГруппКлиентов.Добавить();
		
		ЗаполнитьЗначенияСвойств(ЭтаФормаТаблицаГруппКлиентовСтрока, ТаблицаГруппКлиентовСтрока);
		
		ЭтаФормаТаблицаГруппКлиентовСтрока.Фильтр.ЗагрузитьЗначения(ТаблицаГруппКлиентовСтрока.Фильтр);
		
	КонецЦикла;
	
	СкдАдрес = ОбработкаОбъект.ИнициализироватьОтбор(
			Переменные.ОтборСкдОписание.Тип
		,	ЭтаФорма.КомпоновщикНастроекКомпоновкиДанных
		,	Переменные.ОтборСкдОписание.Заголовок
	);
	
КонецПроцедуры // ПриСозданииНаСервере()

&НаКлиенте
Процедура ТаблицаГруппКлиентовПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если Не НоваяСтрока Тогда
	
		Возврат;
	
	КонецЕсли;
	
	ЭтаФормаТаблицаГруппКлиентовСтрока = Элементы.ТаблицаГруппКлиентов.ТекущиеДанные;

	ЭтаФормаТаблицаГруппКлиентовСтрока.Используется = Истина;
	
КонецПроцедуры // ТаблицаГруппКлиентовПриНачалеРедактирования()

&НаКлиенте
Процедура ТаблицаГруппКлиентовПриАктивизацииСтроки(Элемент)
	
	ЭтаФормаТаблицаГруппКлиентовСтрока = Элементы.ТаблицаГруппКлиентов.ТекущиеДанные;
	
	Если ЭтаФормаТаблицаГруппКлиентовСтрока = Неопределено Тогда
	
		Элементы.КомпоновщикНастроекКомпоновкиДанныхНастройкиОтбор.Видимость = Ложь;
		
		Возврат;
	
	КонецЕсли;
	
	МассивВОтбор("КомпоновщикНастроекКомпоновкиДанных", ЭтаФормаТаблицаГруппКлиентовСтрока.Фильтр.ВыгрузитьЗначения());

	Элементы.КомпоновщикНастроекКомпоновкиДанныхНастройкиОтбор.Видимость = Истина;
	
КонецПроцедуры // ТаблицаГруппКлиентовПриАктивизацииСтроки()

&НаСервере
Функция МассивВОтбор(Знач ОтборРеквизитИмя, Знач ОтборМассив, Знач ОтборУстановлен = Ложь)
	
	ОбработкаОбъект	= ОбработкаОбъект();
	
	РеквизитФормы	= ЭтаФорма[ОтборРеквизитИмя];
	
	ОтборЭлементы	= РеквизитФормы.Настройки.Отбор.Элементы;
	
	Возврат ОбработкаОбъект.МассивВОтбор(ОтборЭлементы, ОтборМассив, ОтборУстановлен);
	
КонецФункции // МассивВОтбор()

&НаСервере
Функция ОбработкаОбъект()

	Перем ОбработкаОбъект;
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	
	//УстановитьСоответствиеОбъектаИФормы(ОбработкаОбъект);
	
	//ОбработкаОбъект.ФормаУникальныйИдентификатор = ЭтаФорма.УникальныйИдентификатор;
	
	Возврат ОбработкаОбъект;

КонецФункции // ОбработкаОбъект()

&НаКлиенте
Процедура КомпоновщикНастроекКомпоновкиДанныхНастройкиОтборПриИзменении(Элемент)
	
	ЭтаФормаТаблицаГруппКлиентовСтрока = Элементы.ТаблицаГруппКлиентов.ТекущиеДанные;
	
	ЭтаФормаТаблицаГруппКлиентовСтрока.Фильтр.ЗагрузитьЗначения(ОтборВМассив());
	
КонецПроцедуры // КомпоновщикНастроекКомпоновкиДанныхНастройкиОтборПриИзменении()

&НаСервере
Функция ОтборВМассив()
	
	Возврат ОбработкаОбъект().ОтборВМассив(КомпоновщикНастроекКомпоновкиДанных.ПолучитьНастройки().Отбор.Элементы);
	
КонецФункции // ОтборВМассив()

&НаКлиенте
Процедура КомандаОк(Команда)
	
	Закрыть(ТаблицаГруппКлиентов());
	
КонецПроцедуры // КомандаОк()

&НаКлиенте
Функция ТаблицаГруппКлиентов()
	
	Перем Результат;
	
	Результат = Новый Структура("ТаблицаГруппКлиентов", Новый Массив);
	
	Для каждого ТаблицаГруппКлиентовСтрока Из ЭтаФорма.ТаблицаГруппКлиентов Цикл
	
		Результат.ТаблицаГруппКлиентов.Добавить(Новый Структура(
			"Используется, Фильтр, ФильтрИмя, clientcode, spocode, clientname, address_ur, address, inn, kpp, sponame, spoaddress, mccode, mcname"
			, ТаблицаГруппКлиентовСтрока.Используется
			, ТаблицаГруппКлиентовСтрока.Фильтр.ВыгрузитьЗначения()
			, ТаблицаГруппКлиентовСтрока.ФильтрИмя
			, ТаблицаГруппКлиентовСтрока.clientcode
			, ТаблицаГруппКлиентовСтрока.spocode
			, ТаблицаГруппКлиентовСтрока.clientname
			, ТаблицаГруппКлиентовСтрока.address_ur
			, ТаблицаГруппКлиентовСтрока.address
			, ТаблицаГруппКлиентовСтрока.inn
			, ТаблицаГруппКлиентовСтрока.kpp
			, ТаблицаГруппКлиентовСтрока.sponame
			, ТаблицаГруппКлиентовСтрока.spoaddress
			, ТаблицаГруппКлиентовСтрока.mccode
			, ТаблицаГруппКлиентовСтрока.mcname
		));
	
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции // ТаблицаГруппКлиентов()

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если Не Модифицированность Или ЗавершениеРаботы Или ЭтаФорма.ЗакрыватьФормуБезПредупреждения Тогда
	
		Возврат;
	
	КонецЕсли;
	
	Отказ = Истина;
	
	ПоказатьВопрос(
		Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтаФорма)
		, "Сохранить изменения?"
		, РежимДиалогаВопрос.ДаНетОтмена
	);
	
КонецПроцедуры // ПередЗакрытием()

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Нет Тогда
		
		ЭтаФорма.ЗакрыватьФормуБезПредупреждения = Истина;
		Закрыть();
		
		Возврат;
		
	ИначеЕсли РезультатВопроса = КодВозвратаДиалога.Да Тогда
		
		ЭтаФорма.ЗакрыватьФормуБезПредупреждения = Истина;
		Закрыть(ТаблицаГруппКлиентов());
		
		Возврат;
		
	КонецЕсли;
	
КонецПроцедуры // ПередЗакрытиемЗавершение()

&НаКлиенте
Процедура КомандаУстановитьФлажки(Команда)
	
	Для каждого ТаблицаГруппКлиентовСтрока Из ТаблицаГруппКлиентов.НайтиСтроки(Новый Структура("Используется", Ложь)) Цикл
	
		ТаблицаГруппКлиентовСтрока.Используется = Истина;
	
	КонецЦикла;
	
КонецПроцедуры // КомандаУстановитьФлажки()

&НаКлиенте
Процедура КомандаСнятьФлажки(Команда)
	
	Для каждого ТаблицаГруппКлиентовСтрока Из ТаблицаГруппКлиентов.НайтиСтроки(Новый Структура("Используется", Истина)) Цикл
	
		ТаблицаГруппКлиентовСтрока.Используется = Ложь;
	
	КонецЦикла;
	
КонецПроцедуры // КомандаСнятьФлажки()