////////////////////////////////////////////////////////////////////////////////
// Содержит события форм, вызываемые на клиенте
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

#Область СобытияЭлементовФорм

// Переопределяемая процедура, вызываемая из одноименного обработчика события элемента.
//
// Параметры:
//   Форма                   - ФормаКлиентскогоПриложения - форма, из которой происходит вызов процедуры.
//   Элемент                 - Произвольный     - элемент-источник события "При изменении".
//   ДополнительныеПараметры - Структура        - значения дополнительных параметров влияющих на обработку.
//
&После("ПриИзмененииЭлемента")
Процедура усПриИзмененииЭлемента(Форма, Элемент, ДополнительныеПараметры) Экспорт
	усОбработатьФормуДокументаРеализацияТоваровУслуг(Форма, Элемент);
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция усОбновитьДанныеПоПартиям(Форма, Элемент)
	Возврат 
		Форма.ИмяФормы = "Документ.РеализацияТоваровУслуг.Форма.ФормаДокумента" И 
		Элемент.Имя = "Товары" И
		Элемент.ТекущиеДанные <> Неопределено;
КонецФункции

Процедура усОбработатьФормуДокументаРеализацияТоваровУслуг(Форма, Элемент)
	Если Не усОбновитьДанныеПоПартиям(Форма, Элемент) Тогда
		Возврат;
	КонецЕсли;

	Номенклатура = Элемент.ТекущиеДанные.Номенклатура;
		
	ОстаткиПоПартиям = усОстаткиПоПартиям(Форма, Номенклатура);
	Если Не ЗначениеЗаполнено(ОстаткиПоПартиям) Тогда
		Возврат;
	КонецЕсли; 
	
	ТаблицаТовары = Форма.Объект.Товары;
	Для Каждого СтрокаТовары Из ТаблицаТовары Цикл
		
		Если СтрокаТовары.Номенклатура <> Номенклатура Тогда
			Продолжить;
		КонецЕсли;
		
		ОстатокКоличество = СтрокаТовары.Количество;
		
		КоличествоПоПартиям = 0;
		СтоимостьПоПартиям = 0;
		
		Для Каждого СтрокаПартии Из ОстаткиПоПартиям Цикл
			
			Если ОстатокКоличество = 0 Тогда
				Прервать;
			КонецЕсли;
			
			Если СтрокаПартии.КоличествоОстаток = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			КоличествоСписания = Мин(ОстатокКоличество, СтрокаПартии.КоличествоОстаток);
			
			СтоимостьСписания = ?(КоличествоСписания = СтрокаПартии.КоличествоОстаток,
				СтрокаПартии.СтоимостьОстаток,
				СтрокаПартии.СтоимостьОстаток / СтрокаПартии.КоличествоОстаток * КоличествоСписания);
			
			КоличествоПоПартиям = КоличествоПоПартиям + КоличествоСписания;
			СтоимостьПоПартиям = СтоимостьПоПартиям + СтоимостьСписания;
			
			СтрокаПартии.КоличествоОстаток = СтрокаПартии.КоличествоОстаток - КоличествоСписания;
			СтрокаПартии.СтоимостьОстаток = СтрокаПартии.СтоимостьОстаток - СтоимостьСписания; 
			
			ОстатокКоличество = ОстатокКоличество - КоличествоСписания;
			
		КонецЦикла;
		
		ВсеПартииРаспределены = ОстатокКоличество = 0; 
		Если ВсеПартииРаспределены И КоличествоПоПартиям > 0 Тогда
			СтрокаТовары.усУчетнаяЦена = СтоимостьПоПартиям / КоличествоПоПартиям;
			СтрокаТовары.усМаржа = СтрокаТовары.СуммаСНДС - СтоимостьПоПартиям;
		Иначе
			СтрокаТовары.усУчетнаяЦена = 0;
			СтрокаТовары.усМаржа = 0;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция усОстаткиПоПартиям(Форма, Номенклатура)
	
	ОбъектФормы = Форма.Объект;
	
	ПартииПоНоменклатуре = усОбслуживаниеФормВызовСервера.ОстаткиПартийПоНоменклатуре(ОбъектФормы.Дата, ОбъектФормы.Склад, Номенклатура);
	СписокПартий = ПартииПоНоменклатуре[Номенклатура];
	
	Возврат СписокПартий;
	
КонецФункции

#КонецОбласти
