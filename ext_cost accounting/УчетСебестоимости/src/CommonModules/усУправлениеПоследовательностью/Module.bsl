#Область ПрограммныйИнтерфейс

Процедура УстановитьГраницуПоследовательности(Документ) Экспорт
	
	Параметр = ПланыВидовХарактеристик.усПараметрыПодсистемы.ГраницаПоследовательности;
	
	НаборЗаписей = РегистрыСведений.усПараметрыПодсистемы.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Параметр.Установить(Параметр);
	Запись = НаборЗаписей.Добавить();
	Запись.Параметр = Параметр;
	Запись.Значение = Документ;
	НаборЗаписей.Записать();
	
КонецПроцедуры

Функция ГраницаПоследовательности() Экспорт

	Результат = Неопределено;

	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	усПараметрыПодсистемы.Значение
		|ИЗ
		|	РегистрСведений.усПараметрыПодсистемы КАК усПараметрыПодсистемы
		|ГДЕ
		|	усПараметрыПодсистемы.Параметр = ЗНАЧЕНИЕ(ПланВидовХарактеристик.усПараметрыПодсистемы.ГраницаПоследовательности)";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Результат = ВыборкаДетальныеЗаписи.Значение;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Процедура ВосстановитьПоследовательность() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	СебестоимостьТоваровОбороты.Регистратор
		|ИЗ
		|	РегистрНакопления.СебестоимостьТоваров.Обороты(&ДатаНачала, , Регистратор,) КАК
		|		СебестоимостьТоваровОбороты
		|
		|УПОРЯДОЧИТЬ ПО
		|	СебестоимостьТоваровОбороты.Период";
	
	Документ = ГраницаПоследовательности();
	Запрос.УстановитьПараметр("ДатаНачала", Новый Граница(Документ.МоментВремени(), ВидГраницы.Включая));
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Регистратор = ВыборкаДетальныеЗаписи.Регистратор;
		НачатьТранзакцию();
		Попытка
			усУправлениеСебестоимостью.ДобавитьДвиженияОстаткиПоПартиям(Регистратор);
			усУправлениеПродажами.ДобавитьДвиженияПродажи(Регистратор);
			УстановитьГраницуПоследовательности(Регистратор);
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			ОбщегоНазначения.СообщитьПользователю("Не удалось восстановить последовательность по причине: " + ОписаниеОшибки());
			Прервать;
		КонецПопытки;
	КонецЦикла;
	
КонецПроцедуры

Функция ЕстьДокументыПослеЭтого(Документ) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	1
		|ИЗ
		|	РегистрНакопления.СебестоимостьТоваров КАК СебестоимостьТоваров
		|ГДЕ
		|	СебестоимостьТоваров.Период > &МомВремени";
	
	Запрос.УстановитьПараметр("МомВремени", Документ.МоментВремени);
	
	Результат = Запрос.Выполнить().Пустой();
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс
// Код процедур и функций
#КонецОбласти

#Область СлужебныеПроцедурыИФункции



#КонецОбласти