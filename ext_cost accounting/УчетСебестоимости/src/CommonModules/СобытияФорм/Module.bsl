////////////////////////////////////////////////////////////////////////////////
// Содержит события форм, вызываемые на сервере
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Процедура, вызываемая из одноименного обработчика события формы.
//
// Параметры:
//  Форма					- ФормаКлиентскогоПриложения - форма, из обработчика события которой происходит вызов процедуры.
//  Отказ					- Булево - признак отказа от создания формы.
//  СтандартнаяОбработка	- Булево - признак выполнения стандартной (системной) обработки события
//  ДополнительныеПараметры	- Структура - дополнительные параметры.
//
&После("ПриСозданииНаСервере")
Процедура усПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка, ДополнительныеПараметры) Экспорт
	Если усЭтоФормаДляОтображенияСтоимости(Форма) Тогда
		ОписаниеТиповЧисло = Метаданные.ОпределяемыеТипы.ДенежнаяСуммаНеотрицательная.Тип;
		
		СписокДобавляемыхРеквизитов = Новый Массив;
		СписокДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("усУчетнаяЦена", ОписаниеТиповЧисло, "Объект.Товары", "Учетная Цена"));
		СписокДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("усМаржа", ОписаниеТиповЧисло, "Объект.Товары", "% Маржа"));
		Форма.ИзменитьРеквизиты(СписокДобавляемыхРеквизитов);
		
		Элементы = Форма.Элементы;
	
		Элемент = Элементы.Вставить("усУчетнаяЦена", Тип("ПолеФормы"), Элементы.Товары, Элементы.ТоварыЦена);
		Элемент.Вид = ВидПоляФормы.ПолеВвода;
		Элемент.ПутьКДанным = "Объект.Товары.усУчетнаяЦена";
		Элемент.Ширина = 9;
		Элемент.ТолькоПросмотр = Истина;	
		
		Элемент = Элементы.Добавить("усМаржа", Тип("ПолеФормы"), Элементы.Товары);
		Элемент.Вид = ВидПоляФормы.ПолеВвода;
		Элемент.ПутьКДанным = "Объект.Товары.усМаржа";
		Элемент.Ширина = 6;
		Элемент.ТолькоПросмотр = Истина;
		
		усОбслуживаниеФормВызовСервера.ОбновитьТаблицуТовары(Форма);	
	КонецЕсли;

//	Если Форма.ИмяФОрмы = "Документ.ПриобретениеТоваровУслуг.Форма.ФормаДокумента" Тогда	
//		
//		МассивНовыыхРеквизитовФормы = Новый Массив;
//		ОписаниеТипочЧисло15_2 = Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(15,2));
//	
//		Реквизит1 = Новый РеквизитФормы("птЦенаПрошлойЗакупки", ОписаниеТипочЧисло15_2,"Объект.Товары", "Цена прошлой закупки");
//		Реквизит2 = Новый РеквизитФормы("птОтклонениеЦен", ОписаниеТипочЧисло15_2, "Объект.Товары", "Отклонение цен");
//		
//		МассивНовыыхРеквизитовФормы.Добавить(Реквизит1);
//		МассивНовыыхРеквизитовФормы.Добавить(Реквизит2);
//		
//		Форма.ИзменитьРеквизиты(МассивНовыыхРеквизитовФормы);
//		Элемент = Элементы.Вставить("птТоварыптОтклонениеЦен", Тип("ПолеФормы"), Элементы.Товары, Элементы.ТоварыСумма);
//		Элемент.Заголовок = "%";
//		Элемент.Вид = ВидПоляФормы.ПолеВвода;
//		Элемент.ПутьКДанным = "Объект.Товары.птОтклонениеЦен";
//		Элемент.ТолькоПросмотр = Истина;		
//			                                                                                
//		Элемент = Элементы.Вставить("птТоварыптЦенаПрошлойЗакупки", Тип("ПолеФормы"), Элементы.Товары, Элементы.птТоварыптОтклонениеЦен);
//		Элемент.Заголовок = "Предыдущая цена";
//		Элемент.Вид = ВидПоляФормы.ПолеВвода;
//		Элемент.ПутьКДанным = "Объект.Товары.птЦенаПрошлойЗакупки";
//		Элемент.ТолькоПросмотр = Истина;	
//		
//		//птРасширениеКонфигурацииСервер.ЗаполнитьЦены(Форма.Объект);
//				
//		//УстановитьУсловноеОформление(Форма);
//		
//	КонецЕсли;	
	
КонецПроцедуры

// Процедура, вызываемая из одноименного обработчика события формы.
//
// Параметры:
//	Форма					- ФормаКлиентскогоПриложения - форма, из обработчика события которой происходит вызов процедуры.
//	ТекущийОбъект			- СправочникОбъект, ДокументОбъект - объект, который будет прочитан.
//	ДополнительныеПараметры - Структура - дополнительные параметры.
//
&После("ПриЧтенииНаСервере")
Процедура усПриЧтенииНаСервере(Форма, ТекущийОбъект, ДополнительныеПараметры) Экспорт
//	Если Не усЭтоФормаДляОтображенияСтоимости(Форма) Тогда
//		Возврат;
//	КонецЕсли;
КонецПроцедуры

// Серверная переопределяемая процедура, вызываемая из обработчика события элемента.
//
// Параметры:
//   Форма                   - ФормаКлиентскогоПриложения - форма, из которой происходит вызов процедуры.
//   Элемент                 - Строка           - имя элемента-источника события "При изменении".
//   ДополнительныеПараметры - Структура        - значения дополнительных параметров влияющих на обработку.
//
&После("ПриИзмененииЭлемента")
Процедура усПриИзмененииЭлемента(Форма, Элемент, ДополнительныеПараметры) Экспорт
	Если усЭтоФормаДляОтображенияСтоимости(Форма) И Элемент = "Товары" Тогда
		усОбслуживаниеФормВызовСервера.ОбновитьТаблицуТовары(Форма);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция усЭтоФормаДляОтображенияСтоимости(Форма)
	Возврат Форма.ИмяФормы = "Документ.РеализацияТоваровУслуг.Форма.ФормаДокумента";
КонецФункции

#КонецОбласти
