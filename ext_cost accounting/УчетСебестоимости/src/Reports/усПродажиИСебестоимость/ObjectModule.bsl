#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

// Настройки общей формы отчета подсистемы "Варианты отчетов".
//
// Параметры:
//   Форма - ФормаКлиентскогоПриложения - Форма отчета.
//   КлючВарианта - Строка - Имя предопределенного варианта отчета или уникальный идентификатор пользовательского.
//   Настройки - См. ОтчетыКлиентСервер.ПолучитьНастройкиОтчетаПоУмолчанию
//
Процедура ОпределитьНастройкиФормы(Форма, КлючВарианта, Настройки) Экспорт
	
	Настройки.События.ПередЗагрузкойВариантаНаСервере = Истина;
	Настройки.События.ПередЗагрузкойНастроекВКомпоновщик = Истина;
	
КонецПроцедуры

// Вызывается в одноименном обработчике формы отчета после выполнения кода формы.
//
// Подробнее - см. ОтчетыПереопределяемый.ПередЗагрузкойВариантаНаСервере
//
Процедура ПередЗагрузкойВариантаНаСервере(ЭтаФорма, НовыеНастройкиКД) Экспорт
	
	Отчет = ЭтаФорма.Отчет;
	КомпоновщикНастроекФормы = Отчет.КомпоновщикНастроек;
	// Изменение настроек по функциональным опциям
	НастроитьПараметрыОтборыПоФункциональнымОпциям(КомпоновщикНастроекФормы);
	
КонецПроцедуры

Процедура ПередЗагрузкойНастроекВКомпоновщик(Контекст, КлючСхемы, КлючВарианта, НовыеНастройкиКД, НовыеПользовательскиеНастройкиКД) Экспорт
	
	Если ТипЗнч(Контекст) = Тип("ФормаКлиентскогоПриложения") Тогда
		НастроитьПараметрыОтчетаПоВариантуОтчета(Контекст.НастройкиОтчета, НовыеНастройкиКД, НовыеПользовательскиеНастройкиКД);
		ОтчетыСервер.ПодключитьСхему(ЭтотОбъект, Контекст, СхемаКомпоновкиДанных, КлючСхемы);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура настройки параметров отчета.
//
// Параметры:
//	НастройкиОтчета - Структура - настройки отчета
//	НовыеНастройкиКД - НастройкиКомпоновкиДанных - настройки компоновки данных
//	НовыеПользовательскиеНастройкиКД - ПользовательскиеНастройкиКомпоновкиДанных - пользовательские настройки 
//
Процедура НастроитьПараметрыОтчетаПоВариантуОтчета(НастройкиОтчета, НовыеНастройкиКД, НовыеПользовательскиеНастройкиКД)
	
//	ПредопределенныйВариант = ПолучитьПредопределенныйВариант(НастройкиОтчета.ВариантСсылка);
//	
//	ПараметрДанныеОтчета = СхемаКомпоновкиДанных.Параметры.Найти("ДанныеОтчета");
//	ПараметрПоПредприятию = СхемаКомпоновкиДанных.Параметры.Найти("ПоПредприятию");
//	
//	СписокВыбора = Новый СписокЗначений;
//	
//	Если ПредопределенныйВариант.КлючВарианта = "ВедомостьПоПартиямТоваровПредприятия" Тогда
//		
//		СписокВыбора.Добавить(1, НСтр("ru='В валюте упр. учета с НДС'"));
//		СписокВыбора.Добавить(2, НСтр("ru='В валюте упр. учета без НДС'"));
//		ПараметрПоПредприятию.Значение = Истина;
//		
//	Иначе
//		
//		Если РасчетСебестоимостиПовтИсп.УправленческийУчетОрганизаций() Тогда
//			СписокВыбора.Добавить(3, НСтр("ru = 'В валюте упр. учета'"));
//		КонецЕсли;
//		СписокВыбора.Добавить(4, НСтр("ru='В валюте регл. учета'"));
//		ПараметрПоПредприятию.Значение = Ложь;
//		
//	КонецЕсли;
//	
//	ПараметрДанныеОтчета.УстановитьДоступныеЗначения(СписокВыбора);
//	
//	Если НовыеНастройкиКД = Неопределено
//		Или НовыеПользовательскиеНастройкиКД = Неопределено Тогда
//		Возврат;
//	КонецЕсли;
//	
//	ЗначениеПараметраДанныеОтчета = НовыеНастройкиКД.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ДанныеОтчета"));
//	НастройкаДанныеОтчета = НовыеПользовательскиеНастройкиКД.Элементы.Найти(ЗначениеПараметраДанныеОтчета.ИдентификаторПользовательскойНастройки);
//	Если Не НастройкаДанныеОтчета = Неопределено
//		И СписокВыбора.НайтиПоЗначению(НастройкаДанныеОтчета.Значение) = Неопределено Тогда
//		НастройкаДанныеОтчета.Значение = СписокВыбора[0].Значение;
//	КонецЕсли;
//	
КонецПроцедуры

Процедура НастроитьПараметрыОтборыПоФункциональнымОпциям(КомпоновщикНастроекФормы)

	КомпоновкаДанныхСервер.ДобавитьПараметр(КомпоновщикНастроекФормы, "Период");
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли