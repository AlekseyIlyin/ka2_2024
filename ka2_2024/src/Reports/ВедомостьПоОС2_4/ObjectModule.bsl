#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОбработчикиСобытий

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	НастройкиОсновнойСхемы = КомпоновщикНастроек.ПолучитьНастройки();
	ЗначенияОтбораДанных = ПолучитьЗначенияОтбораДанных(НастройкиОсновнойСхемы);
	
	ТекстСообщения = НСтр("ru = 'Отчет не поддерживает получение данных до даты начала учета внеоборотных активов версии 2.4 - %1.
                           |Необходимо воспользоваться аналогичным отчетом в разделе ""Регламентированный учет"".'");

	ВнеоборотныеАктивыСлужебный.ПроверитьПериодОтчетаВерсии24(
		ЗначенияОтбораДанных.НачалоПериода, 
		ЗначенияОтбораДанных.ОкончаниеПериода, 
		ТекстСообщения,
		Отказ); 
	
КонецПроцедуры
 
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	НастройкиОсновнойСхемы = КомпоновщикНастроек.ПолучитьНастройки();
	
	УстановитьПараметрыОтчета(НастройкиОсновнойСхемы);
	
	ОбесценениеВНАСервер.УстановитьВидимостьДанныхОбесцененияВОтчете(НастройкиОсновнойСхемы);
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, НастройкиОсновнойСхемы, ДанныеРасшифровки);	
	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, Неопределено, ДанныеРасшифровки, Истина);
	
	ПроцессорВыводаВТабличныйДокумент = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВыводаВТабличныйДокумент.УстановитьДокумент(ДокументРезультат);	
	ПроцессорВыводаВТабличныйДокумент.Вывести(ПроцессорКомпоновкиДанных);
	
	ОформитьШапкуОтчета(ДокументРезультат);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Настройки общей формы отчета подсистемы "Варианты отчетов".
//
// Параметры:
//   Форма - ФормаКлиентскогоПриложения - Форма отчета.
//   КлючВарианта - Строка - Имя предопределенного варианта отчета или уникальный идентификатор пользовательского.
//   Настройки - Структура - см. возвращаемое значение ОтчетыКлиентСервер.ПолучитьНастройкиОтчетаПоУмолчанию().
//
Процедура ОпределитьНастройкиФормы(Форма, КлючВарианта, Настройки) Экспорт
	
	Настройки.События.ПриСозданииНаСервере = Истина;
	
КонецПроцедуры

// Вызывается в обработчике одноименного события формы отчета после выполнения кода формы.
//
// Параметры:
//   Форма - ФормаКлиентскогоПриложения - форма отчета.
//   Отказ - Булево - признак отказа от создания формы.
//   СтандартнаяОбработка - Булево - признак выполнения стандартной (системной) обработки события.
//
Процедура ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка) Экспорт
	
	//++ Локализация
	БухгалтерскиеОтчеты.ИнициализироватьРежимВыгрузкиБСП(Форма);
	//-- Локализация
	
КонецПроцедуры

// Вызывается в обработчике одноименного события формы отчета после выполнения кода формы.
//
// Параметры:
//   Форма - ФормаКлиентскогоПриложения - форма отчета.
//   НовыеПользовательскиеНастройкиКД - ПользовательскиеНастройкиКомпоновкиДанных -
//       Пользовательские настройки для загрузки в компоновщик настроек.
//
Процедура ПриЗагрузкеПользовательскихНастроекНаСервере(Форма, НовыеПользовательскиеНастройкиКД) Экспорт

	//++ Локализация
	БухгалтерскиеОтчеты.ПриЗагрузкеПользовательскихНастроекНаСервере(Форма, НовыеПользовательскиеНастройкиКД, КомпоновщикНастроек);
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ФормированиеОтчета
 
Процедура ОформитьШапкуОтчета(ТабДок)
	
	СписокГруппЯчеек = Новый Массив;
	СписокГруппЯчеек.Добавить(НСтр("ru = 'Показатели'"));
	СписокГруппЯчеек.Добавить(НСтр("ru = 'Дата принятия к учету'"));
	СписокГруппЯчеек.Добавить(НСтр("ru = 'Первоначальная стоимость'"));
	
	СписокГруппЯчеек.Добавить(НСтр("ru = 'Стоимость'"));
	СписокГруппЯчеек.Добавить(НСтр("ru = 'Амортизация'"));
	СписокГруппЯчеек.Добавить(НСтр("ru = 'Остаточная стоимость'"));
	
	СписокГруппЯчеек.Добавить(НСтр("ru = 'Увеличение стоимости'"));
	СписокГруппЯчеек.Добавить(НСтр("ru = 'Начисление амортизации'"));
	СписокГруппЯчеек.Добавить(НСтр("ru = 'Уменьшение стоимости'"));
	СписокГруппЯчеек.Добавить(НСтр("ru = 'Списание амортизации'"));
	
	СписокГруппЯчеек.Добавить(НСтр("ru = 'Обесценение'"));
	
	СписокПодчиненныхЯчеек = Новый Массив;
	СписокПодчиненныхЯчеек.Добавить(НСтр("ru = 'БУ'"));
	СписокПодчиненныхЯчеек.Добавить(НСтр("ru = 'НУ'"));
	СписокПодчиненныхЯчеек.Добавить(НСтр("ru = 'ПР'"));
	СписокПодчиненныхЯчеек.Добавить(НСтр("ru = 'ВР'"));
	СписокПодчиненныхЯчеек.Добавить(НСтр("ru = 'УУ'"));
	
	ВнеоборотныеАктивыСлужебный.ОбъединитьПодчиненныеЯчейки(ТабДок, СписокГруппЯчеек, СписокПодчиненныхЯчеек);
	
КонецПроцедуры

Процедура УстановитьПараметрыОтчета(НастройкиОсновнойСхемы)

	КомпоновкаДанныхКлиентСервер.УстановитьПараметр(НастройкиОсновнойСхемы, "ПоказательБУ", НСтр("ru = 'БУ'"));
	КомпоновкаДанныхКлиентСервер.УстановитьПараметр(НастройкиОсновнойСхемы, "ПоказательНУ", НСтр("ru = 'НУ'"));
	КомпоновкаДанныхКлиентСервер.УстановитьПараметр(НастройкиОсновнойСхемы, "ПоказательПР", НСтр("ru = 'ПР'"));
	КомпоновкаДанныхКлиентСервер.УстановитьПараметр(НастройкиОсновнойСхемы, "ПоказательВР", НСтр("ru = 'ВР'"));
	КомпоновкаДанныхКлиентСервер.УстановитьПараметр(НастройкиОсновнойСхемы, "ПоказательУУ", НСтр("ru = 'УУ'"));
	
	// ТипыДокументовСписаниеАмортизации
	ТипыДокументов = Новый СписокЗначений;
	ТипыДокументов.Добавить(Тип("ДокументСсылка.ИзменениеУсловийДоговораАренды"));
	ТипыДокументов.Добавить(Тип("ДокументСсылка.КорректировкаРегистров"));
	ТипыДокументов.Добавить(Тип("ДокументСсылка.КорректировкаСтоимостиИАмортизацииОС"));
	ТипыДокументов.Добавить(Тип("ДокументСсылка.ОбъединениеОС"));
	ТипыДокументов.Добавить(Тип("ДокументСсылка.ПереоценкаОС2_4"));
	ТипыДокументов.Добавить(Тип("ДокументСсылка.ПодготовкаКПередачеОС2_4"));
	ТипыДокументов.Добавить(Тип("ДокументСсылка.ПрекращениеДоговораАренды"));
	ТипыДокументов.Добавить(Тип("ДокументСсылка.ПринятиеКУчетуОС2_4"));
	ТипыДокументов.Добавить(Тип("ДокументСсылка.РазукомплектацияОС"));
	ТипыДокументов.Добавить(Тип("ДокументСсылка.СписаниеОС2_4"));
	КомпоновкаДанныхКлиентСервер.УстановитьПараметр(НастройкиОсновнойСхемы, "ТипыДокументовСписаниеАмортизации", ТипыДокументов);
	
	// ТипыДокументовНачислениеАмортизации
	ТипыДокументов = Новый СписокЗначений;
	ТипыДокументов.Добавить(Тип("ДокументСсылка.АмортизацияОС2_4"));
	ТипыДокументов.Добавить(Тип("ДокументСсылка.ВводОстатковВнеоборотныхАктивов2_4"));
	ТипыДокументов.Добавить(Тип("ДокументСсылка.ИзменениеУсловийДоговораАренды"));
	ТипыДокументов.Добавить(Тип("ДокументСсылка.КорректировкаРегистров"));
	ТипыДокументов.Добавить(Тип("ДокументСсылка.КорректировкаСтоимостиИАмортизацииОС"));
	ТипыДокументов.Добавить(Тип("ДокументСсылка.ПереоценкаОС2_4"));
	ТипыДокументов.Добавить(Тип("ДокументСсылка.ПринятиеКУчетуОС2_4"));
	ТипыДокументов.Добавить(Тип("ДокументСсылка.РаспределениеНДС"));
	КомпоновкаДанныхКлиентСервер.УстановитьПараметр(НастройкиОсновнойСхемы, "ТипыДокументовНачислениеАмортизации", ТипыДокументов);
	
	// ТипыДокументовУвеличениеСтоимости
	ТипыДокументов = Новый СписокЗначений;
	ТипыДокументов.Добавить(Тип("ДокументСсылка.ВводОстатковВнеоборотныхАктивов2_4"));
	ТипыДокументов.Добавить(Тип("ДокументСсылка.ВыкупАрендованныхОС"));
	ТипыДокументов.Добавить(Тип("ДокументСсылка.ИзменениеУсловийДоговораАренды"));
	ТипыДокументов.Добавить(Тип("ДокументСсылка.КорректировкаРегистров"));
	ТипыДокументов.Добавить(Тип("ДокументСсылка.КорректировкаСтоимостиИАмортизацииОС"));
	ТипыДокументов.Добавить(Тип("ДокументСсылка.МодернизацияОС2_4"));
	ТипыДокументов.Добавить(Тип("ДокументСсылка.ОбъединениеОС"));
	ТипыДокументов.Добавить(Тип("ДокументСсылка.ПереоценкаОС2_4"));
	ТипыДокументов.Добавить(Тип("ДокументСсылка.ПоступлениеАрендованныхОС"));
	ТипыДокументов.Добавить(Тип("ДокументСсылка.ПринятиеКУчетуОС2_4"));
	ТипыДокументов.Добавить(Тип("ДокументСсылка.РазукомплектацияОС"));
	ТипыДокументов.Добавить(Тип("ДокументСсылка.РаспределениеНДС"));
	ТипыДокументов.Добавить(Тип("ДокументСсылка.НачислениеСписаниеРезервовПредстоящихРасходов"));
	КомпоновкаДанныхКлиентСервер.УстановитьПараметр(НастройкиОсновнойСхемы, "ТипыДокументовУвеличениеСтоимости", ТипыДокументов);
	
	// ТипыДокументовУменьшениеСтоимости
	ТипыДокументов = Новый СписокЗначений;
	ТипыДокументов.Добавить(Тип("ДокументСсылка.АмортизацияОС2_4"));
	ТипыДокументов.Добавить(Тип("ДокументСсылка.ВыбытиеАрендованныхОС"));
	ТипыДокументов.Добавить(Тип("ДокументСсылка.ВыкупАрендованныхОС"));
	ТипыДокументов.Добавить(Тип("ДокументСсылка.ИзменениеУсловийДоговораАренды"));
	ТипыДокументов.Добавить(Тип("ДокументСсылка.КорректировкаРегистров"));
	ТипыДокументов.Добавить(Тип("ДокументСсылка.КорректировкаСтоимостиИАмортизацииОС"));
	ТипыДокументов.Добавить(Тип("ДокументСсылка.МодернизацияОС2_4"));
	ТипыДокументов.Добавить(Тип("ДокументСсылка.ОбъединениеОС"));
	ТипыДокументов.Добавить(Тип("ДокументСсылка.ПереоценкаОС2_4"));
	ТипыДокументов.Добавить(Тип("ДокументСсылка.ПодготовкаКПередачеОС2_4"));
	ТипыДокументов.Добавить(Тип("ДокументСсылка.ПрекращениеДоговораАренды"));
	ТипыДокументов.Добавить(Тип("ДокументСсылка.ПринятиеКУчетуОС2_4"));
	ТипыДокументов.Добавить(Тип("ДокументСсылка.РазукомплектацияОС"));
	ТипыДокументов.Добавить(Тип("ДокументСсылка.РаспределениеНДС"));
	ТипыДокументов.Добавить(Тип("ДокументСсылка.СписаниеОС2_4"));
	ТипыДокументов.Добавить(Тип("ДокументСсылка.НачислениеСписаниеРезервовПредстоящихРасходов"));
	КомпоновкаДанныхКлиентСервер.УстановитьПараметр(НастройкиОсновнойСхемы, "ТипыДокументовУменьшениеСтоимости", ТипыДокументов);
	
КонецПроцедуры
 
#КонецОбласти

#Область Прочее

Функция ПолучитьЗначенияОтбораДанных(НастройкиОсновнойСхемы)

	ЗначенияОтбораДанных = Новый Структура;
	
	ОтчетыУТСервер.ПериодОтчета(НастройкиОсновнойСхемы, ЗначенияОтбораДанных);
	
	Возврат ЗначенияОтбораДанных;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли
