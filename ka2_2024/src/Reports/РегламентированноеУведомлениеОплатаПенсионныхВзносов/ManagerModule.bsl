#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции
Функция ПолучитьФормуПоУмолчанию() Экспорт
	Возврат "";
КонецФункции

Функция СформироватьСписокЛистов(Объект) Экспорт
	Если Объект.ИмяФормы = "Форма2023_1" Тогда 
		Возврат СформироватьСписокЛистовФорма2023_1(Объект);
	КонецЕсли;
КонецФункции

Функция ПолучитьТаблицуПримененияФорматов() Экспорт 
	Результат = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюТаблицуПримененияФорматов();
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "Форма2023_1";
	Стр.КНД = "1184044";
	Стр.ВерсияФормата = "5.01";
	
	Возврат Результат;
КонецФункции

Функция ДанноеУведомлениеДоступноДляОрганизации() Экспорт 
	Возврат Истина;
КонецФункции

Функция ДанноеУведомлениеДоступноДляИП() Экспорт 
	Возврат Ложь;
КонецФункции

Функция ПолучитьОсновнуюФорму() Экспорт 
	Возврат "";
КонецФункции

Функция ПолучитьТаблицуФорм() Экспорт 
	Результат = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюТаблицуФормУведомления();
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "Форма2023_1";
	Стр.ОписаниеФормы = "В соответствии с приказом ФНС России от 18.10.2023 № ЕД-7-11/756@";
	
	Возврат Результат;
КонецФункции

Функция СформироватьМакет(Объект, ИмяФормы) Экспорт
	ВызватьИсключение НСтр("ru = 'Печатная форма не реализована'");
	Возврат Неопределено;
КонецФункции

Функция ЭлектронноеПредставление(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт
	Если ИмяФормы = "Форма2023_1" Тогда
		Возврат ЭлектронноеПредставление_Форма2023_1(Объект, УникальныйИдентификатор);
	КонецЕсли;
	Возврат Неопределено;
КонецФункции

Функция ДанныеСправки(Объект, ТекстВыгрузки) Экспорт
	Если Объект.ИмяФормы = "Форма2023_1" Тогда
		Возврат ДанныеСправки2023_1(Объект, ТекстВыгрузки);
	КонецЕсли;
КонецФункции

Функция ЭлектронноеПредставлениеСправки(Объект, УникальныйИдентификатор) Экспорт
	Попытка
		Возврат УведомлениеОСпецрежимахНалогообложения.ЭлектронноеПредставлениеСправки(
			Объект, УникальныйИдентификатор, ЭлектронноеПредставлениеСправки_Форма2023_1(Объект.Ссылка, УникальныйИдентификатор))
	Исключение
		Возврат Неопределено;
	КонецПопытки;
КонецФункции

Функция ПроверитьДокумент(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт
КонецФункции

Функция ПроверитьДокументСВыводомВТаблицу(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт 
	Если ИмяФормы = "Форма2023_1" Тогда 
		Возврат ПроверитьДокументСВыводомВТаблицу_Форма2023_1(
			УведомлениеОСпецрежимахНалогообложения.ДанныеУведомленияДляВыгрузки(Объект), УникальныйИдентификатор);
	КонецЕсли;
КонецФункции

Функция ПроверитьСправкуСВыводомВТаблицу(Объект, УникальныйИдентификатор) Экспорт 
	Если Объект.ИмяФормы = "Форма2023_1" Тогда 
		Возврат ПроверитьСправкуСВыводомВТаблицу_Форма2023_1(
			УведомлениеОСпецрежимахНалогообложения.ДанныеУведомленияДляВыгрузки(Объект), УникальныйИдентификатор);
	КонецЕсли;
КонецФункции

Функция ИдентификаторФайлаЭлектронногоПредставления_Форма2023_1(СведенияОтправки)
	Префикс = "UT_SVOPLPENS";
	Возврат Документы.УведомлениеОСпецрежимахНалогообложения.ИдентификаторФайлаЭлектронногоПредставления(Префикс, СведенияОтправки);
КонецФункции

Функция ИдентификаторФайлаЭлектронногоПредставленияСправки_Форма2023_1(СведенияОтправки)
	Префикс = "UT_SPROPLPENS";
	Возврат Документы.УведомлениеОСпецрежимахНалогообложения.ИдентификаторФайлаЭлектронногоПредставления(Префикс, СведенияОтправки);
КонецФункции

Функция ПроверитьДокументСВыводомВТаблицу_Форма2023_1(Данные, УникальныйИдентификатор)
	ТаблицаОшибок = Новый СписокЗначений;
	УведомлениеОСпецрежимахНалогообложения.ПроверкаАктуальностиФормыПриВыгрузке(
		Данные.Объект.ИмяФормы, ТаблицаОшибок, ПолучитьТаблицуФорм());
		
	Титульная = Данные.ДанныеУведомления.Титульная;
	УведомлениеОСпецрежимахНалогообложения.ПроверкаИНН(Титульная, ТаблицаОшибок, "Титульная", "ИНН", Истина, Истина);
	УведомлениеОСпецрежимахНалогообложения.ПроверкаКПП(Титульная, ТаблицаОшибок, "Титульная", "КПП", Истина);
	Если Не ЗначениеЗаполнено(Титульная.ПРИЗНАК_НП_ПОДВАЛ) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан признак подписанта", "Титульная", "ПРИЗНАК_НП_ПОДВАЛ"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.ДАТА_ПОДПИСИ) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указана дата подписи", "Титульная", "ДАТА_ПОДПИСИ"));
	КонецЕсли;
	УведомлениеОСпецрежимахНалогообложения.ПроверкаПодписантаНалоговойОтчетности(Данные, ТаблицаОшибок, "Титульная", Истина);
	Если Титульная.ПРИЗНАК_НП_ПОДВАЛ = "2" И Не ЗначениеЗаполнено(Титульная.НаимДок) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан документ представителя", "Титульная", "НаимДок"));
	КонецЕсли;
	УведомлениеОСпецрежимахНалогообложения.ПроверкаКодаНО(Титульная.КодНО, ТаблицаОшибок, "Титульная");
	УведомлениеОСпецрежимахНалогообложения.ПроверкаГода(Титульная, ТаблицаОшибок, "Титульная", "ОтчГод", Истина);
	
	Для Каждого Стр Из Данные.ДанныеМногостраничныхРазделов.СведУплПенсВзн Цикл 
		СведУплПенсВзн = Стр.Значение;
		
		Если Не ЗначениеЗаполнено(СведУплПенсВзн.НомерСвед) Или Не СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(СведУплПенсВзн.НомерСвед) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан / неправильно указан номер сведений", "СведУплПенсВзн", "НомерСвед", СведУплПенсВзн.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СведУплПенсВзн.ПрВыгодопр) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан признак", "СведУплПенсВзн", "ПрВыгодопр", СведУплПенсВзн.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СведУплПенсВзн.ДатаДоговор) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указана дата договора", "СведУплПенсВзн", "ДатаДоговор", СведУплПенсВзн.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СведУплПенсВзн.НомерДоговор) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан номер договора", "СведУплПенсВзн", "НомерДоговор", СведУплПенсВзн.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СведУплПенсВзн.Фамилия) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указана фамилия", "СведУплПенсВзн", "Фамилия", СведУплПенсВзн.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СведУплПенсВзн.Имя) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указано имя", "СведУплПенсВзн", "Имя", СведУплПенсВзн.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СведУплПенсВзн.ДатаРожд) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указана дата рождения", "СведУплПенсВзн", "ДатаРожд", СведУплПенсВзн.УИД));
		КонецЕсли;
		УведомлениеОСпецрежимахНалогообложения.ПроверкаИНН(СведУплПенсВзн, ТаблицаОшибок, "СведУплПенсВзн", "ИННФЛ", Ложь, Ложь);
		Если Не ЗначениеЗаполнено(СведУплПенсВзн.ИННФЛ)
			Или УведомлениеОСпецрежимахНалогообложения.БлокЗаполнен(СведУплПенсВзн, "КодВидДок,СерНомДок,ДатаДок") Тогда 
			Если Не ЗначениеЗаполнено(СведУплПенсВзн.КодВидДок) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указан код документа", "СведУплПенсВзн", "КодВидДок", СведУплПенсВзн.УИД));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(СведУплПенсВзн.СерНомДок) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указаны серия/номер документа", "СведУплПенсВзн", "СерНомДок", СведУплПенсВзн.УИД));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(СведУплПенсВзн.ДатаДок) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указана дата выдачи документа", "СведУплПенсВзн", "ДатаДок", СведУплПенсВзн.УИД));
			КонецЕсли;
		КонецЕсли;
		
		Если СведУплПенсВзн.ПрВыгодопр = "0" Тогда 
			Если Не ЗначениеЗаполнено(СведУплПенсВзн.ФамилияПолучатель) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указана фамилия", "СведУплПенсВзн", "ФамилияПолучатель", СведУплПенсВзн.УИД));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(СведУплПенсВзн.ИмяПолучатель) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указано имя", "СведУплПенсВзн", "ИмяПолучатель", СведУплПенсВзн.УИД));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(СведУплПенсВзн.ДатаРождПолучатель) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указана дата рождения", "СведУплПенсВзн", "ДатаРождПолучатель", СведУплПенсВзн.УИД));
			КонецЕсли;
			УведомлениеОСпецрежимахНалогообложения.ПроверкаИНН(СведУплПенсВзн, ТаблицаОшибок, "СведУплПенсВзн", "ИННФЛПолучатель", Ложь, Ложь);
			Если Не ЗначениеЗаполнено(СведУплПенсВзн.ИННФЛПолучатель)
				Или УведомлениеОСпецрежимахНалогообложения.БлокЗаполнен(СведУплПенсВзн, "КодВидДокПолучатель,СерНомДокПолучатель,ДатаДокПолучатель") Тогда 
				
				Если Не ЗначениеЗаполнено(СведУплПенсВзн.КодВидДокПолучатель) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Не указан код документа", "СведУплПенсВзн", "КодВидДокПолучатель", СведУплПенсВзн.УИД));
				КонецЕсли;
				Если Не ЗначениеЗаполнено(СведУплПенсВзн.СерНомДокПолучатель) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Не указаны серия/номер документа", "СведУплПенсВзн", "СерНомДокПолучатель", СведУплПенсВзн.УИД));
				КонецЕсли;
				Если Не ЗначениеЗаполнено(СведУплПенсВзн.ДатаДокПолучатель) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Не указана дата выдачи документа", "СведУплПенсВзн", "ДатаДокПолучатель", СведУплПенсВзн.УИД));
				КонецЕсли;
			КонецЕсли;
		ИначеЕсли СведУплПенсВзн.ПрВыгодопр = "1" Тогда 
			Если УведомлениеОСпецрежимахНалогообложения.БлокЗаполнен(СведУплПенсВзн, 
					"ИННФЛПолучатель,ДатаРождПолучатель,КодВидДокПолучатель,СерНомДокПолучатель,"
					+"ДатаДокПолучатель,ФамилияПолучатель,ИмяПолучатель,ОтчествоПолучатель") Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"При признаке ""1"" сведения кому оказаны услуги не заполняются", "СведУплПенсВзн", "ФамилияПолучатель", СведУплПенсВзн.УИД));
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	УведомлениеОСпецрежимахНалогообложения.ПроверкаДатВУведомлении(Данные, ТаблицаОшибок);
	УведомлениеОСпецрежимахНалогообложения.ПолнаяПроверкаЗаполненныхПоказателейНаСоотвествиеСписку(
		"СпискиВыбора2023_1", "СхемаВыгрузкиФорма2023_1",
		Данные.Объект.ИмяОтчета, ТаблицаОшибок, Данные);
	Возврат ТаблицаОшибок;
КонецФункции

Функция ПроверитьСправкуСВыводомВТаблицу_Форма2023_1(Данные, УникальныйИдентификатор)
	ТаблицаОшибок = Новый СписокЗначений;
	УведомлениеОСпецрежимахНалогообложения.ПроверкаАктуальностиФормыПриВыгрузке(
		Данные.Объект.ИмяФормы, ТаблицаОшибок, ПолучитьТаблицуФорм());
		
	Титульная = Данные.ДанныеУведомления.Титульная;
	УведомлениеОСпецрежимахНалогообложения.ПроверкаИНН(Титульная, ТаблицаОшибок, "Титульная", "ИНН", Истина, Истина);
	УведомлениеОСпецрежимахНалогообложения.ПроверкаКПП(Титульная, ТаблицаОшибок, "Титульная", "КПП", Истина);
	УведомлениеОСпецрежимахНалогообложения.ПроверкаПодписантаНалоговойОтчетности(Данные, ТаблицаОшибок, "Титульная", Истина);
	УведомлениеОСпецрежимахНалогообложения.ПроверкаГода(Титульная, ТаблицаОшибок, "Титульная", "ОтчГод", Истина);
	
	Для Каждого Стр Из Данные.ДанныеМногостраничныхРазделов.СведУплПенсВзн Цикл 
		СведУплПенсВзн = Стр.Значение;
		Если УникальныйИдентификатор <> СведУплПенсВзн.УИД Тогда 
			Продолжить;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(СведУплПенсВзн.НомерСвед) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан номер сведений", "СведУплПенсВзн", "НомерСвед", СведУплПенсВзн.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СведУплПенсВзн.ПрВыгодопр) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан признак", "СведУплПенсВзн", "ПрВыгодопр", СведУплПенсВзн.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СведУплПенсВзн.ДатаДоговор) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указана дата договора", "СведУплПенсВзн", "ДатаДоговор", СведУплПенсВзн.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СведУплПенсВзн.НомерДоговор) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан номер договора", "СведУплПенсВзн", "НомерДоговор", СведУплПенсВзн.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СведУплПенсВзн.Фамилия) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указана фамилия", "СведУплПенсВзн", "Фамилия", СведУплПенсВзн.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СведУплПенсВзн.Имя) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указано имя", "СведУплПенсВзн", "Имя", СведУплПенсВзн.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СведУплПенсВзн.ДатаРожд) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указана дата рождения", "СведУплПенсВзн", "ДатаРожд", СведУплПенсВзн.УИД));
		КонецЕсли;
		УведомлениеОСпецрежимахНалогообложения.ПроверкаИНН(СведУплПенсВзн, ТаблицаОшибок, "СведУплПенсВзн", "ИННФЛ", Ложь, Ложь);
		Если Не ЗначениеЗаполнено(СведУплПенсВзн.ИННФЛ)
			Или УведомлениеОСпецрежимахНалогообложения.БлокЗаполнен(СведУплПенсВзн, "КодВидДок,СерНомДок,ДатаДок") Тогда 
			Если Не ЗначениеЗаполнено(СведУплПенсВзн.КодВидДок) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указан код документа", "СведУплПенсВзн", "КодВидДок", СведУплПенсВзн.УИД));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(СведУплПенсВзн.СерНомДок) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указаны серия/номер документа", "СведУплПенсВзн", "СерНомДок", СведУплПенсВзн.УИД));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(СведУплПенсВзн.ДатаДок) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указана дата выдачи документа", "СведУплПенсВзн", "ДатаДок", СведУплПенсВзн.УИД));
			КонецЕсли;
		КонецЕсли;
		
		Если СведУплПенсВзн.ПрВыгодопр = "0" Тогда 
			Если Не ЗначениеЗаполнено(СведУплПенсВзн.ФамилияПолучатель) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указана фамилия", "СведУплПенсВзн", "ФамилияПолучатель", СведУплПенсВзн.УИД));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(СведУплПенсВзн.ИмяПолучатель) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указано имя", "СведУплПенсВзн", "ИмяПолучатель", СведУплПенсВзн.УИД));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(СведУплПенсВзн.ДатаРождПолучатель) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указана дата рождения", "СведУплПенсВзн", "ДатаРождПолучатель", СведУплПенсВзн.УИД));
			КонецЕсли;
			УведомлениеОСпецрежимахНалогообложения.ПроверкаИНН(СведУплПенсВзн, ТаблицаОшибок, "СведУплПенсВзн", "ИННФЛПолучатель", Ложь, Ложь);
			Если Не ЗначениеЗаполнено(СведУплПенсВзн.ИННФЛПолучатель)
				Или УведомлениеОСпецрежимахНалогообложения.БлокЗаполнен(СведУплПенсВзн, "КодВидДокПолучатель,СерНомДокПолучатель,ДатаДокПолучатель") Тогда 
				
				Если Не ЗначениеЗаполнено(СведУплПенсВзн.КодВидДокПолучатель) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Не указан код документа", "СведУплПенсВзн", "КодВидДокПолучатель", СведУплПенсВзн.УИД));
				КонецЕсли;
				Если Не ЗначениеЗаполнено(СведУплПенсВзн.СерНомДокПолучатель) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Не указаны серия/номер документа", "СведУплПенсВзн", "СерНомДокПолучатель", СведУплПенсВзн.УИД));
				КонецЕсли;
				Если Не ЗначениеЗаполнено(СведУплПенсВзн.ДатаДокПолучатель) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Не указана дата выдачи документа", "СведУплПенсВзн", "ДатаДокПолучатель", СведУплПенсВзн.УИД));
				КонецЕсли;
			КонецЕсли;
		ИначеЕсли СведУплПенсВзн.ПрВыгодопр = "1" Тогда 
			Если УведомлениеОСпецрежимахНалогообложения.БлокЗаполнен(СведУплПенсВзн, 
					"ИННФЛПолучатель,ДатаРождПолучатель,КодВидДокПолучатель,СерНомДокПолучатель,"
					+"ДатаДокПолучатель,ФамилияПолучатель,ИмяПолучатель,ОтчествоПолучатель") Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"При признаке ""1"" сведения кому оказаны услуги не заполняются", "СведУплПенсВзн", "ФамилияПолучатель", СведУплПенсВзн.УИД));
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	УведомлениеОСпецрежимахНалогообложения.ПроверкаДатВУведомлении(Данные, ТаблицаОшибок);
	УведомлениеОСпецрежимахНалогообложения.ПолнаяПроверкаЗаполненныхПоказателейНаСоотвествиеСписку(
		"СпискиВыбора2023_1", "СхемаВыгрузкиФорма2023_1",
		Данные.Объект.ИмяОтчета, ТаблицаОшибок, Данные);
	Инд = 0;
	Пока Инд < ТаблицаОшибок.Количество() Цикл 
		ТекущаяОшибка = ТаблицаОшибок[Инд].Значение;
		Если ТекущаяОшибка.ИмяСтраницы = "СведУплПенсВзн" И ТекущаяОшибка.УИДСтраницы <> УникальныйИдентификатор Тогда 
			ТаблицаОшибок.Удалить(Инд);
		КонецЕсли;
		Инд = Инд + 1;
	КонецЦикла;
	Возврат ТаблицаОшибок;
КонецФункции

Функция ОсновныеСведенияЭлектронногоПредставления_Форма2023_1(Объект, УникальныйИдентификатор)
	ОсновныеСведения = Документы.УведомлениеОСпецрежимахНалогообложения.НачальнаяИнициализацияОбщихРеквизитовВыгрузки(Объект);
	
	Данные = Объект.ДанныеУведомления.Получить();
	ИдентификаторФайла = ИдентификаторФайлаЭлектронногоПредставления_Форма2023_1(ОсновныеСведения);
	ОсновныеСведения.Вставить("ИдФайл", ИдентификаторФайла);
	
	Возврат ОсновныеСведения;
КонецФункции

Функция ОсновныеСведенияЭлектронногоПредставленияСправки_Форма2023_1(Объект, УникальныйИдентификатор)
	ОсновныеСведения = Документы.УведомлениеОСпецрежимахНалогообложения.НачальнаяИнициализацияОбщихРеквизитовВыгрузки(Объект);
	
	Данные = Объект.ДанныеУведомления.Получить();
	ИдентификаторФайла = ИдентификаторФайлаЭлектронногоПредставленияСправки_Форма2023_1(ОсновныеСведения);
	ОсновныеСведения.Вставить("ИдФайл", ИдентификаторФайла);
	
	Возврат ОсновныеСведения;
КонецФункции

Функция ЭлектронноеПредставление_Форма2023_1(Объект, УникальныйИдентификатор)
	СведенияЭлектронногоПредставления = УведомлениеОСпецрежимахНалогообложения.СведенияЭлектронногоПредставления();
	ДанныеУведомления = УведомлениеОСпецрежимахНалогообложения.ДанныеУведомленияДляВыгрузки(Объект);
	Ошибки = ПроверитьДокументСВыводомВТаблицу_Форма2023_1(ДанныеУведомления, УникальныйИдентификатор);
	УведомлениеОСпецрежимахНалогообложения.СообщитьОшибкиПриПроверкеВыгрузки(Объект, Ошибки, ДанныеУведомления);
	
	ОсновныеСведения = ОсновныеСведенияЭлектронногоПредставления_Форма2023_1(Объект, УникальныйИдентификатор);
	СтруктураВыгрузки = Документы.УведомлениеОСпецрежимахНалогообложения.ИзвлечьСтруктуруXMLУведомления(Объект.ИмяОтчета, "СхемаВыгрузкиФорма2023_1");
	УведомлениеОСпецрежимахНалогообложения.ТиповоеЗаполнениеДанными(ДанныеУведомления, ОсновныеСведения, СтруктураВыгрузки);
	УведомлениеОСпецрежимахНалогообложения.ВыгрузитьДеревоВТаблицу(СтруктураВыгрузки, ОсновныеСведения, СведенияЭлектронногоПредставления);
	Возврат СведенияЭлектронногоПредставления;
КонецФункции

Функция ЭлектронноеПредставлениеСправки_Форма2023_1(Объект, УникальныйИдентификатор)
	СведенияЭлектронногоПредставления = УведомлениеОСпецрежимахНалогообложения.СведенияЭлектронногоПредставления();
	ДанныеУведомления = УведомлениеОСпецрежимахНалогообложения.ДанныеУведомленияДляВыгрузки(Объект);
	Ошибки = ПроверитьСправкуСВыводомВТаблицу_Форма2023_1(ДанныеУведомления, УникальныйИдентификатор);
	УведомлениеОСпецрежимахНалогообложения.СообщитьОшибкиПриПроверкеВыгрузки(Объект, Ошибки, ДанныеУведомления);
	
	Для Каждого Стр Из ДанныеУведомления.ДанныеМногостраничныхРазделов.СведУплПенсВзн Цикл 
		Если Стр.Значение.УИД = УникальныйИдентификатор Тогда 
			ДанныеУведомления.ДанныеУведомления.Вставить("СпрУплПенсВзн", Стр.Значение);
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	ОсновныеСведения = ОсновныеСведенияЭлектронногоПредставленияСправки_Форма2023_1(Объект, УникальныйИдентификатор);
	СтруктураВыгрузки = Документы.УведомлениеОСпецрежимахНалогообложения.ИзвлечьСтруктуруXMLУведомления(Объект.ИмяОтчета, "СхемаВыгрузкиСправка2023_1");
	УведомлениеОСпецрежимахНалогообложения.ТиповоеЗаполнениеДанными(ДанныеУведомления, ОсновныеСведения, СтруктураВыгрузки);
	УведомлениеОСпецрежимахНалогообложения.ВыгрузитьДеревоВТаблицу(СтруктураВыгрузки, ОсновныеСведения, СведенияЭлектронногоПредставления);
	Возврат СведенияЭлектронногоПредставления;
КонецФункции

Функция СформироватьСписокЛистовФорма2023_1(Объект) Экспорт
	Листы = Новый СписокЗначений;
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	ПечатнаяФорма.ОриентацияСтраницы  = ОриентацияСтраницы.Ландшафт;
	МакетПФ = Отчеты[Объект.ИмяОтчета].ПолучитьМакет("Печать_Журнал_2023_1");
	Заголовок = МакетПФ.ПолучитьОбласть("Заголовок");
	Строка = МакетПФ.ПолучитьОбласть("Строка");
	Подвал = МакетПФ.ПолучитьОбласть("Подвал");
	
	ДанныеУведомления = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Ссылка, "ДанныеУведомления").Получить();
	Титульная = ДанныеУведомления.ДанныеУведомления.Титульная;
	ЗаполнитьЗначенияСвойств(Заголовок.Параметры, Титульная);
	ПечатнаяФорма.Вывести(Заголовок);
	
	Инд = 0;
	Для Каждого Стр Из ДанныеУведомления.ДанныеМногостраничныхРазделов.СведУплПенсВзн Цикл 
		Инд = Инд + 1;
		ЗаполнитьЗначенияСвойств(Строка.Параметры, Титульная);
		ЗаполнитьЗначенияСвойств(Строка.Параметры, Стр.Значение);
		Строка.Параметры.НомПП = Инд;
		Строка.Параметры.ФИО = СокрЛП("" + Стр.Значение.Фамилия + " " + Стр.Значение.Имя + " " + Стр.Значение.Отчество);
		Строка.Параметры.ФИОПолучатель = СокрЛП("" + Стр.Значение.ФамилияПолучатель + " " + Стр.Значение.ИмяПолучатель + " " + Стр.Значение.ОтчествоПолучатель);
		ПечатнаяФорма.Вывести(Строка);
	КонецЦикла;
	
	ПечатнаяФорма.Вывести(Подвал);
	УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, 1, Ложь);
	Возврат Листы;
КонецФункции

Функция СформироватьСправку(Объект, УИДТекущаяСтраница) Экспорт
	СписокИспользуемыхМакетов = УведомлениеОСпецрежимахНалогообложения.ЗагрузитьМакетыИзАрхива(Объект, "БланкиПечати_");
	Листы = Новый СписокЗначений;
	
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	СтруктураПараметров = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Ссылка, "ДанныеУведомления").Получить();
	
	ДанныеПечати = Новый Структура;
	Для Каждого Стр Из СтруктураПараметров.ДанныеМногостраничныхРазделов.СведУплПенсВзн Цикл 
		Если Стр.Значение.УИД = УИДТекущаяСтраница Тогда 
			ДанныеПечати = Стр.Значение;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	ИННКПП = УведомлениеОСпецрежимахНалогообложения.ТиповаяСтруктураИННКППДляПечати(Объект, СтруктураПараметров.ДанныеУведомления.Титульная);
	ИННКПП.Вставить("НаимОрг", СтруктураПараметров.ДанныеУведомления.Титульная.НаимОрг);
	ИННКПП.Вставить("ОтчГод", СтруктураПараметров.ДанныеУведомления.Титульная.ОтчГод);
	ИННКПП.Вставить("ДАТА_ПОДПИСИ", СтруктураПараметров.ДанныеУведомления.Титульная.ДАТА_ПОДПИСИ);
	
	НомСтр = 0;
	УведомлениеОСпецрежимахНалогообложения.НапечататьСтруктуру(Объект.ИмяОтчета, ДанныеПечати, НомСтр, 
		УведомлениеОСпецрежимахНалогообложения.ПустойМакетИзСписка(Объект, СписокИспользуемыхМакетов, "Печать_Налогоплательщик_2023_1"), ПечатнаяФорма, ИННКПП);
	УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
	
	УведомлениеОСпецрежимахНалогообложения.НапечататьСтруктуру(Объект.ИмяОтчета, ДанныеПечати, НомСтр, 
		УведомлениеОСпецрежимахНалогообложения.ПустойМакетИзСписка(Объект, СписокИспользуемыхМакетов, "Печать_Получатель_2023_1"), ПечатнаяФорма, ИННКПП);
	УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
	
	Возврат Листы;
КонецФункции

Функция ДанныеСправки2023_1(Объект, ТекстВыгрузки)
	Попытка
		ДеревоЗагрузки = УведомлениеОСпецрежимахНалогообложения.СформироватьДеревоЗагрузки(ТекстВыгрузки);
		КНД = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/Документ/КНД", "ИмяЭлемента").ЗначениеЭлемента;
		ВерсФорм = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/ВерсФорм", "ИмяЭлемента").ЗначениеЭлемента;
		Если КНД <> "1151157" Или ВерсФорм <> "5.01" Тогда 
			ОбщегоНазначения.СообщитьПользователю("Ожидается файл КНД 1151157 в формате 5.01");
			Возврат Неопределено;
		КонецЕсли;
		СхемаВыгрузки = Документы.УведомлениеОСпецрежимахНалогообложения.ИзвлечьСтруктуруXMLУведомления(Объект.ИмяОтчета, "СхемаВыгрузкиСправка2023_1");
		Возврат УведомлениеОСпецрежимахНалогообложения.ЗагрузитьСправку(СхемаВыгрузки, ДеревоЗагрузки, "Документ/СпрУплПенсВзн");
	Исключение
		ОбщегоНазначения.СообщитьПользователю("Файл не соответсвует формату");
		Возврат Неопределено;
	КонецПопытки;
КонецФункции
#КонецОбласти
#КонецЕсли
