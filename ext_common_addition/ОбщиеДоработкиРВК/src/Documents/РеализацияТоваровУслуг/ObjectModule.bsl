#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОбработчикиСобытий

&После("ОбработкаПроведения")
Процедура рвк_ОбработкаПроведения(Отказ, РежимПроведения)

	Если Отказ Тогда
		Возврат;
	КонецЕсли;

	// + AI АВТО создание счетов-фактур
	СоздаватьСчетФактуру = ЗначениеЗаполнено(УправлениеСвойствами.ЗначениеСвойства(ЭтотОбъект.Организация,  "СоздаватьСчетфактурАвтоматически_8ca57267cf054884a995902e23783f85"));
	Если СоздаватьСчетФактуру Тогда
		ПараметрыРегистрации = УчетНДСУПКлиентСервер.ПараметрыРегистрацииСчетовФактурВыданных();
		ЗаполнитьЗначенияСвойств(ПараметрыРегистрации,ЭтотОбъект);
		ПараметрыРегистрации.РеализацияТоваров = Истина;
		РезультатПроверки = УчетНДСУП.СчетаФактурыВыданныеНаОсновании(ПараметрыРегистрации);
		
		ЗначенияРеквизитовКонтрагентаРеализации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ЭтотОбъект.Контрагент, "ИНН,КПП");
		ПерезаполнитьРеквизитыСчетаФактуры = Ложь;
		
		Если ЗначениеЗаполнено(РезультатПроверки.СчетаФактуры) Тогда
			
			ЗначенияРеквизитовСчетаФактуры = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(РезультатПроверки.СчетаФактуры[0], "Номер,Дата,Склад,Контрагент,Партнер,ИННКонтрагента,КППКонтрагента");
			
			ПерезаполнитьРеквизитыСчетаФактуры = 
				ЗначенияРеквизитовСчетаФактуры.Контрагент <> ЭтотОбъект.Контрагент ИЛИ 
				ЗначенияРеквизитовСчетаФактуры.Партнер <> ЭтотОбъект.Партнер ИЛИ 
				ЗначенияРеквизитовСчетаФактуры.Склад <> ЭтотОбъект.Склад ИЛИ 
				ЗначенияРеквизитовКонтрагентаРеализации.ИНН <> ЗначенияРеквизитовСчетаФактуры.ИННКонтрагента ИЛИ 
				ЗначенияРеквизитовКонтрагентаРеализации.КПП <> ЗначенияРеквизитовСчетаФактуры.КППКонтрагента ИЛИ 
				СокрЛП(ЗначенияРеквизитовСчетаФактуры.Номер) <> СокрЛП(ЭтотОбъект.Номер) ИЛИ 
				НачалоДня(ЗначенияРеквизитовСчетаФактуры.Дата) <> НачалоДня(ЭтотОбъект.Дата);
			
			Если ПерезаполнитьРеквизитыСчетаФактуры Тогда
				СчетФактураОбъект = РезультатПроверки.СчетаФактуры[0].ПолучитьОбъект();
			КонецЕсли;
			
		Иначе
			СчетФактураОбъект = Документы.СчетФактураВыданный.СоздатьДокумент();
			СчетФактураОбъект.Заполнить(ЭтотОбъект.Ссылка);
			СчетФактураОбъект.Дата = ЭтотОбъект.Дата;
			
			СчетФактураОбъект.Организация = ЭтотОбъект.Организация;
			СчетФактураОбъект.ДатаВыставления = ЭтотОбъект.Дата;
			
			СчетФактураОбъект.Ответственный = ПараметрыСеанса.ТекущийПользователь;
			СчетФактураОбъект.ДокументОснование = ЭтотОбъект.Ссылка;
			СтрокаДокументаОснования = СчетФактураОбъект.ДокументыОснования.Добавить();
			СтрокаДокументаОснования.ХозяйственнаяОперация = ЭтотОбъект.ХозяйственнаяОперация;
			СтрокаДокументаОснования.ДокументОснование = ЭтотОбъект.Ссылка;
			
			СчетФактураОбъект.ИдентификаторГосКонтракта = ЭтотОбъект.Договор.ИдентификаторГосКонтракта;
			
			ПерезаполнитьРеквизитыСчетаФактуры = Истина;
		КонецЕсли;
		
		Если ПерезаполнитьРеквизитыСчетаФактуры Тогда
			СчетФактураОбъект.Номер = ЭтотОбъект.Номер; // 02.03.2020 AI
			СчетФактураОбъект.Дата = ЭтотОбъект.Дата; // 29.04.2020 AI
			СчетФактураОбъект.Контрагент = ЭтотОбъект.Контрагент;
			СчетФактураОбъект.Партнер = ЭтотОбъект.Партнер;
			СчетФактураОбъект.Склад = ЭтотОбъект.Склад;
			СчетФактураОбъект.ИННКонтрагента = ЗначенияРеквизитовКонтрагентаРеализации.ИНН;
			СчетФактураОбъект.КППКонтрагента = ЗначенияРеквизитовКонтрагентаРеализации.КПП;
			Попытка
				СчетФактураОбъект.Записать(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Неоперативный);
			Исключение
				СообщениеПользователю = Новый СообщениеПользователю;
				СообщениеПользователю.Текст = "Не удалось провести счет-фактуру по причине: " + ОписаниеОшибки();
				СообщениеПользователю.Сообщить();
			КонецПопытки;
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#КонецЕсли