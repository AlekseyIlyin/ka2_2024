#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Перем мВключитьИнтеркампани; 
	
#Область ОбработчикиСобытий

&После("ПриЗаписи")
Процедура рвк_ПриЗаписи(Отказ)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	рвк_СформироватьПриобретение(Отказ);
	
КонецПроцедуры


&После("ОбработкаПроведения")
Процедура рвк_ОбработкаПроведения(Отказ, РежимПроведения)
	
	рвк_СформироватьСчетФактуру(Отказ);
	рвк_ПровестиПриобраетение(Отказ);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбработкаПроведения

Процедура рвк_СформироватьСчетФактуру(Отказ)
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;

	Если Не рвк_ОбщийМодульПовтИсп.СоздаватьСчетфактурАвтоматически(Организация) Тогда
		Возврат;
	КонецЕсли;

	ПараметрыРегистрации = УчетНДСУПКлиентСервер.ПараметрыРегистрацииСчетовФактурВыданных();
	ЗаполнитьЗначенияСвойств(ПараметрыРегистрации,ЭтотОбъект);
	ПараметрыРегистрации.РеализацияТоваров = Истина;
	РезультатПроверки = УчетНДСУП.СчетаФактурыВыданныеНаОсновании(ПараметрыРегистрации);
	
	ЗначенияРеквизитовКонтрагентаРеализации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Контрагент, "ИНН,КПП");
	ПерезаполнитьРеквизитыСчетаФактуры = Ложь;
	
	Если ЗначениеЗаполнено(РезультатПроверки.СчетаФактуры) Тогда
		
		ЗначенияРеквизитовСчетаФактуры = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(РезультатПроверки.СчетаФактуры[0], "Номер,Дата,Склад,Контрагент,Партнер,ИННКонтрагента,КППКонтрагента");
		
		ПерезаполнитьРеквизитыСчетаФактуры = 
			ЗначенияРеквизитовСчетаФактуры.Контрагент <> Контрагент ИЛИ 
			ЗначенияРеквизитовСчетаФактуры.Партнер <> Партнер ИЛИ 
			ЗначенияРеквизитовСчетаФактуры.Склад <> Склад ИЛИ 
			ЗначенияРеквизитовКонтрагентаРеализации.ИНН <> ЗначенияРеквизитовСчетаФактуры.ИННКонтрагента ИЛИ 
			ЗначенияРеквизитовКонтрагентаРеализации.КПП <> ЗначенияРеквизитовСчетаФактуры.КППКонтрагента ИЛИ 
			СокрЛП(ЗначенияРеквизитовСчетаФактуры.Номер) <> СокрЛП(Номер) ИЛИ 
			НачалоДня(ЗначенияРеквизитовСчетаФактуры.Дата) <> НачалоДня(Дата);
		
		Если ПерезаполнитьРеквизитыСчетаФактуры Тогда
			СчетФактураОбъект = РезультатПроверки.СчетаФактуры[0].ПолучитьОбъект();
		КонецЕсли;
		
	Иначе
		СчетФактураОбъект = Документы.СчетФактураВыданный.СоздатьДокумент();
		СчетФактураОбъект.Заполнить(Ссылка);
		СчетФактураОбъект.Дата = Дата;
		
		СчетФактураОбъект.Организация = Организация;
		СчетФактураОбъект.ДатаВыставления = Дата;
		
		СчетФактураОбъект.Ответственный = ПараметрыСеанса.ТекущийПользователь;
		СчетФактураОбъект.ДокументОснование = Ссылка;
		СтрокаДокументаОснования = СчетФактураОбъект.ДокументыОснования.Добавить();
		СтрокаДокументаОснования.ХозяйственнаяОперация = ХозяйственнаяОперация;
		СтрокаДокументаОснования.ДокументОснование = Ссылка;
		
		СчетФактураОбъект.ИдентификаторГосКонтракта = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Договор, "ИдентификаторГосКонтракта");
		
		ПерезаполнитьРеквизитыСчетаФактуры = Истина;
	КонецЕсли;
	
	Если ПерезаполнитьРеквизитыСчетаФактуры Тогда
		СчетФактураОбъект.Номер = Номер;
		СчетФактураОбъект.Дата = Дата;
		СчетФактураОбъект.Контрагент = Контрагент;
		СчетФактураОбъект.Партнер = Партнер;
		СчетФактураОбъект.Склад = Склад;
		СчетФактураОбъект.ИННКонтрагента = ЗначенияРеквизитовКонтрагентаРеализации.ИНН;
		СчетФактураОбъект.КППКонтрагента = ЗначенияРеквизитовКонтрагентаРеализации.КПП;
		Попытка
			СчетФактураОбъект.Записать(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Неоперативный);
		Исключение
			СообщениеПользователю = Новый СообщениеПользователю;
			СообщениеПользователю.Текст = "Не удалось провести счет-фактуру по причине: " + ОписаниеОшибки();
			СообщениеПользователю.Сообщить();
		КонецПопытки;
	КонецЕсли;
	
КонецПроцедуры

Процедура рвк_ПровестиПриобраетение(Отказ)
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если Не мВключитьИнтеркампани Тогда
		Возврат;
	КонецЕсли;
	
	Приобретение = Неопределено;
	Если Не ДополнительныеСвойства.Свойство("Приобретение", Приобретение) 
			Или Не ЗначениеЗаполнено(Приобретение) Тогда
		Возврат;
	КонецЕсли;
	
	ПриобретениеОбъект = Приобретение.ПолучитьОбъект();
	Попытка
		ПриобретениеОбъект.Записать(РежимЗаписиДокумента.Проведение);
	Исключение
		ТекстСообщения = 
			СтрШаблон("Документ не удалось провести: %1 проверьте заполненение соглашения с поставщиком: %2", Приобретение, ПриобретениеОбъект.Соглашение);
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти

Процедура рвк_СформироватьПриобретение(Отказ)
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если  Не мВключитьИнтеркампани 
			Или Не рвк_ОбщийМодульПовтИсп.ПартнерНашаОрганизация(Партнер) Тогда
		Возврат;
	КонецЕсли;
	
	СоглашениеСПоставщиком = рвк_СоглашениеСПоставщиком();
	ПриобретениеGUID = рвк_ПриобретениеИнтеркампани();
	Если ЗначениеЗаполнено(ПриобретениеGUID) Тогда
		Приобретение = Документы.ПриобретениеТоваровУслуг.ПолучитьСсылку(Новый УникальныйИдентификатор(ПриобретениеGUID));
		Если ЗначениеЗаполнено(Приобретение) Тогда
			ПриобретениеОбъект = Приобретение.ПолучитьОбъект();
		КонецЕсли;
		Если ПриобретениеОбъект = Неопределено Тогда
			ПриобретениеОбъект = Документы.ПриобретениеТоваровУслуг.СоздатьДокумент();
		Иначе
			Если ПометкаУдаления <> ПриобретениеОбъект.ПометкаУдаления Тогда
				ПриобретениеОбъект.УстановитьПометкуУдаления(ПометкаУдаления);
			ИначеЕсли ПриобретениеОбъект.Проведен Тогда // Проведение будет в обработчике проведения
				ПриобретениеОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
			КонецЕсли;
		КонецЕсли;
	Иначе
		Если ПометкаУдаления Тогда
			Возврат;
		Иначе
			ПриобретениеОбъект = Документы.ПриобретениеТоваровУслуг.СоздатьДокумент();
		КонецЕсли;
	КонецЕсли;
	
	ПриобретениеОбъект.Заполнить(СоглашениеСПоставщиком);
	ПриобретениеОбъект.Дата = Дата;
	ПриобретениеОбъект.ДатаВходящегоДокумента = Дата;
	ПриобретениеОбъект.НомерВходящегоДокумента = Номер;
	ПриобретениеОбъект.Товары.Загрузить(Товары.Выгрузить());
	ПриобретениеОбъект.Записать();
	
	Приобретение = ПриобретениеОбъект.Ссылка;
	ДополнительныеСвойства.Вставить("Приобретение", Приобретение);
	рвк_ОбновитьСсылкуНаПриобретение(Приобретение);

	ТекстСообщения = СтрШаблон("Сформирован документ: %1", Приобретение);
	ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		
КонецПроцедуры

Процедура рвк_ОбновитьСсылкуНаПриобретение(Приобретение)
	ТаблицаСвойствИЗначений = УправлениеСвойствами.ЗначенияСвойств(Ссылка, Ложь);
	СвойстваПриобретениеИнтеркампани = рвк_СвойстваПриобретениеИнтеркампани();
	СтрокаЗначенияСвойства = ТаблицаСвойствИЗначений.Найти(СвойстваПриобретениеИнтеркампани, "Свойство");
	Если СтрокаЗначенияСвойства = Неопределено Тогда
		СтрокаЗначенияСвойства = ТаблицаСвойствИЗначений.Добавить();
		СтрокаЗначенияСвойства.Свойство = СвойстваПриобретениеИнтеркампани;
	КонецЕсли;
	СтрокаЗначенияСвойства.Значение = XMLСтрока(Приобретение); 
	УправлениеСвойствами.ЗаписатьСвойстваУОбъекта(Ссылка, ТаблицаСвойствИЗначений); 
КонецПроцедуры

// Приобретение интеркампани.
// 
// Возвращаемое значение:
//  Произвольный - Приобретение интеркампани
Функция рвк_ПриобретениеИнтеркампани()
	Результат = рвк_ОбщегоНазначения.ЗначениеСвойства(Ссылка, рвк_СвойстваПриобретениеИнтеркампани(), Неопределено);
	Возврат Результат;
КонецФункции

Функция рвк_СоглашениеСПоставщиком()
	ИмяСвойста = "СоглашениеСПоставщиком_fce5fe05c0de4363ac8f62295fa98d13";
	Гиперссылка = рвк_ОбщегоНазначения.ЗначениеСвойства(Партнер, ИмяСвойста, Неопределено);
	Результат = рвк_ОбщегоНазначения.СсылкуИзНавигационной(Гиперссылка);
	Если Не ЗначениеЗаполнено(Результат) Тогда
		ТекстСообщения = СтрШаблон("В дополнительных реквизитах Партнера: %1 не указано соглашение с поставщиком", Партнер);
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;	
	Возврат Результат;
КонецФункции

Функция рвк_СвойстваПриобретениеИнтеркампани()
	ИмяСвойста = "ПриобретениеТоваровИнтеркампани_99632521ff87417294fd4853ca9e1654";
	Результат = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Имя", ИмяСвойста);
	Если Не ЗначениеЗаполнено(Результат) Тогда
		ВызватьИсключение "Не обнаружено доп. свойство " + ИмяСвойста;
	КонецЕсли;
	Возврат Результат;
КонецФункции

#КонецОбласти

#Область Инициализация
мВключитьИнтеркампани = Константы.рвк_ВключитьИнтеркампани.Получить();
#КонецОбласти

#КонецЕсли